ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32l4xx_hal_can.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c"
  20              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
  21              		.align	1
  22              		.weak	HAL_CAN_MspInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_CAN_MspInit:
  28              	.LVL0:
  29              	.LFB323:
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @file    stm32l4xx_hal_can.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief   CAN HAL module driver.
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *          functionalities of the Controller Area Network (CAN) peripheral:
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           + Configuration functions
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           + Control functions
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           + Interrupts management
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           + Callbacks functions
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           + Peripheral State and Error functions
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ******************************************************************************
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @attention
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * Copyright (c) 2017 STMicroelectronics.
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * All rights reserved.
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * This software is licensed under terms that can be found in the LICENSE file
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * in the root directory of this software component.
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ******************************************************************************
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   @verbatim
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                         ##### How to use this driver #####
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 2


  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     [..]
  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) Initialize the CAN low level resources by implementing the
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_MspInit():
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****          (++) Enable the CAN interface clock using __HAL_RCC_CANx_CLK_ENABLE()
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****          (++) Configure CAN pins
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****              (+++) Enable the clock for the CAN GPIOs
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****              (+++) Configure CAN pins as alternate function open-drain
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****          (++) In case of using interrupts (e.g. HAL_CAN_ActivateNotification())
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****              (+++) Configure the CAN interrupt priority using
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                    HAL_NVIC_SetPriority()
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****              (+++) Enable the CAN IRQ handler using HAL_NVIC_EnableIRQ()
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****              (+++) In CAN IRQ handler, call HAL_CAN_IRQHandler()
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) Initialize the CAN peripheral using HAL_CAN_Init() function. This
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           function resorts to HAL_CAN_MspInit() for low-level initialization.
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) Configure the reception filters using the following configuration
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           functions:
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) HAL_CAN_ConfigFilter()
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) Start the CAN module using HAL_CAN_Start() function. At this level
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           the node is active on the bus: it receive messages, and can send
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           messages.
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) To manage messages transmission, the following Tx control functions
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           can be used:
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) HAL_CAN_AddTxMessage() to request transmission of a new
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  message.
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) HAL_CAN_AbortTxRequest() to abort transmission of a pending
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  message.
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) HAL_CAN_GetTxMailboxesFreeLevel() to get the number of free Tx
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  mailboxes.
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) HAL_CAN_IsTxMessagePending() to check if a message is pending
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  in a Tx mailbox.
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) HAL_CAN_GetTxTimestamp() to get the timestamp of Tx message
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  sent, if time triggered communication mode is enabled.
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) When a message is received into the CAN Rx FIFOs, it can be retrieved
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           using the HAL_CAN_GetRxMessage() function. The function
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_GetRxFifoFillLevel() allows to know how many Rx message are
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           stored in the Rx Fifo.
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) Calling the HAL_CAN_Stop() function stops the CAN module.
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) The deinitialization is achieved with HAL_CAN_DeInit() function.
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       *** Polling mode operation ***
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       ==============================
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     [..]
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) Reception:
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) Monitor reception of message using HAL_CAN_GetRxFifoFillLevel()
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  until at least one message is received.
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) Then get the message using HAL_CAN_GetRxMessage().
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) Transmission:
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) Monitor the Tx mailboxes availability until at least one Tx
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 3


  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  mailbox is free, using HAL_CAN_GetTxMailboxesFreeLevel().
  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) Then request transmission of a message using
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  HAL_CAN_AddTxMessage().
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       *** Interrupt mode operation ***
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       ================================
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     [..]
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) Notifications are activated using HAL_CAN_ActivateNotification()
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           function. Then, the process can be controlled through the
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           available user callbacks: HAL_CAN_xxxCallback(), using same APIs
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_GetRxMessage() and HAL_CAN_AddTxMessage().
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) Notifications can be deactivated using
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_DeactivateNotification() function.
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) Special care should be taken for CAN_IT_RX_FIFO0_MSG_PENDING and
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           CAN_IT_RX_FIFO1_MSG_PENDING notifications. These notifications trig
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           the callbacks HAL_CAN_RxFIFO0MsgPendingCallback() and
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_RxFIFO1MsgPendingCallback(). User has two possible options
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           here.
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) Directly get the Rx message in the callback, using
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  HAL_CAN_GetRxMessage().
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) Or deactivate the notification in the callback without
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  getting the Rx message. The Rx message can then be got later
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  using HAL_CAN_GetRxMessage(). Once the Rx message have been
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  read, the notification can be activated again.
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       *** Sleep mode ***
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       ==================
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     [..]
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) The CAN peripheral can be put in sleep mode (low power), using
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_RequestSleep(). The sleep mode will be entered as soon as the
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           current CAN activity (transmission or reception of a CAN frame) will
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           be completed.
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) A notification can be activated to be informed when the sleep mode
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           will be entered.
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) It can be checked if the sleep mode is entered using
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_IsSleepActive().
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           Note that the CAN state (accessible from the API HAL_CAN_GetState())
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           is HAL_CAN_STATE_SLEEP_PENDING as soon as the sleep mode request is
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           submitted (the sleep mode is not yet entered), and become
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_STATE_SLEEP_ACTIVE when the sleep mode is effective.
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) The wake-up from sleep mode can be triggered by two ways:
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) Using HAL_CAN_WakeUp(). When returning from this function,
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  the sleep mode is exited (if return status is HAL_OK).
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) When a start of Rx CAN frame is detected by the CAN peripheral,
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  if automatic wake up mode is enabled.
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *** Callback registration ***
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   =============================================
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   The compilation define  USE_HAL_CAN_REGISTER_CALLBACKS when set to 1
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 4


 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   allows the user to configure dynamically the driver callbacks.
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   Use Function HAL_CAN_RegisterCallback() to register an interrupt callback.
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   Function HAL_CAN_RegisterCallback() allows to register following callbacks:
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   and a pointer to the user callback function.
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   Use function HAL_CAN_UnRegisterCallback() to reset a callback to the default
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   weak function.
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_UnRegisterCallback takes as parameters the HAL peripheral handle,
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   and the Callback ID.
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   This function allows to reset following callbacks:
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   By default, after the HAL_CAN_Init() and when the state is HAL_CAN_STATE_RESET,
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   all callbacks are set to the corresponding weak functions:
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   example HAL_CAN_ErrorCallback().
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   Exception done for MspInit and MspDeInit functions that are
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   reset to the legacy weak function in the HAL_CAN_Init()/ HAL_CAN_DeInit() only when
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   these callbacks are null (not registered beforehand).
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if not, MspInit or MspDeInit are not null, the HAL_CAN_Init()/ HAL_CAN_DeInit()
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   Callbacks can be registered/unregistered in HAL_CAN_STATE_READY state only.
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   in HAL_CAN_STATE_READY or HAL_CAN_STATE_RESET state,
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   In that case first register the MspInit/MspDeInit user callbacks
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 5


 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   using HAL_CAN_RegisterCallback() before calling HAL_CAN_DeInit()
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   or HAL_CAN_Init() function.
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   When The compilation define USE_HAL_CAN_REGISTER_CALLBACKS is set to 0 or
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   not defined, the callback registration feature is not available and all callbacks
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   are set to the corresponding weak functions.
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   @endverbatim
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ******************************************************************************
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /* Includes ------------------------------------------------------------------*/
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #include "stm32l4xx_hal.h"
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /** @addtogroup STM32L4xx_HAL_Driver
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @{
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if defined(CAN1)
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /** @defgroup CAN CAN
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief CAN driver modules
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @{
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #ifdef HAL_CAN_MODULE_ENABLED
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #ifdef HAL_CAN_LEGACY_MODULE_ENABLED
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #error "The CAN driver cannot be used with its legacy, Please enable only one CAN module at once"
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* HAL_CAN_LEGACY_MODULE_ENABLED */
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /* Private typedef -----------------------------------------------------------*/
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /* Private define ------------------------------------------------------------*/
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /** @defgroup CAN_Private_Constants CAN Private Constants
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @{
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #define CAN_TIMEOUT_VALUE 10U
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @}
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /* Private macro -------------------------------------------------------------*/
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /* Private variables ---------------------------------------------------------*/
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /* Private function prototypes -----------------------------------------------*/
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /* Exported functions --------------------------------------------------------*/
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions CAN Exported Functions
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @{
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group1 Initialization and de-initialization functions
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****  *  @brief    Initialization and Configuration functions
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****  *
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @verbatim
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****               ##### Initialization and de-initialization functions #####
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     [..]  This section provides functions allowing to:
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 6


 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_Init                       : Initialize and configure the CAN.
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_DeInit                     : De-initialize the CAN.
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_MspInit                    : Initialize the CAN MSP.
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_MspDeInit                  : DeInitialize the CAN MSP.
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @endverbatim
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @{
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         parameters in the CAN_InitStruct.
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef *hcan)
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t tickstart;
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check CAN handle */
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan == NULL)
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check the parameters */
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Reset callbacks to legacy functions */
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->RxFifo0MsgPendingCallback  =  HAL_CAN_RxFifo0MsgPendingCallback;  /* Legacy weak RxFifo0M
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->RxFifo0FullCallback        =  HAL_CAN_RxFifo0FullCallback;        /* Legacy weak RxFifo0F
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->RxFifo1MsgPendingCallback  =  HAL_CAN_RxFifo1MsgPendingCallback;  /* Legacy weak RxFifo1M
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->RxFifo1FullCallback        =  HAL_CAN_RxFifo1FullCallback;        /* Legacy weak RxFifo1F
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->TxMailbox0CompleteCallback =  HAL_CAN_TxMailbox0CompleteCallback; /* Legacy weak TxMailbo
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->TxMailbox1CompleteCallback =  HAL_CAN_TxMailbox1CompleteCallback; /* Legacy weak TxMailbo
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->TxMailbox2CompleteCallback =  HAL_CAN_TxMailbox2CompleteCallback; /* Legacy weak TxMailbo
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->TxMailbox0AbortCallback    =  HAL_CAN_TxMailbox0AbortCallback;    /* Legacy weak TxMailbo
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->TxMailbox1AbortCallback    =  HAL_CAN_TxMailbox1AbortCallback;    /* Legacy weak TxMailbo
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->TxMailbox2AbortCallback    =  HAL_CAN_TxMailbox2AbortCallback;    /* Legacy weak TxMailbo
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->SleepCallback              =  HAL_CAN_SleepCallback;              /* Legacy weak SleepCal
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->WakeUpFromRxMsgCallback    =  HAL_CAN_WakeUpFromRxMsgCallback;    /* Legacy weak WakeUpFr
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCallback              =  HAL_CAN_ErrorCallback;              /* Legacy weak ErrorCal
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 7


 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (hcan->MspInitCallback == NULL)
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->MspInitCallback = HAL_CAN_MspInit; /* Legacy weak MspInit */
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->MspInitCallback(hcan);
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     HAL_CAN_MspInit(hcan);
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* (USE_HAL_CAN_REGISTER_CALLBACKS) */
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Request initialisation */
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Get tick */
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   tickstart = HAL_GetTick();
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Wait initialisation acknowledge */
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Update error code */
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Change CAN state */
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       return HAL_ERROR;
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Exit from sleep mode */
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Get tick */
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   tickstart = HAL_GetTick();
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check Sleep mode leave acknowledge */
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Update error code */
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Change CAN state */
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       return HAL_ERROR;
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 8


 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Set the time triggered communication mode */
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->Init.TimeTriggeredMode == ENABLE)
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Set the automatic bus-off management */
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->Init.AutoBusOff == ENABLE)
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Set the automatic wake-up mode */
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->Init.AutoWakeUp == ENABLE)
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Set the automatic retransmission */
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->Init.AutoRetransmission == ENABLE)
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Set the receive FIFO locked mode */
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->Init.ReceiveFifoLocked == ENABLE)
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Set the transmit FIFO priority */
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->Init.TransmitFifoPriority == ENABLE)
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 9


 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Set the bit timing register */
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                             hcan->Init.TimeSeg1       |
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                             hcan->Init.TimeSeg2       |
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                             (hcan->Init.Prescaler - 1U)));
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Initialize the error code */
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Initialize the CAN state */
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY;
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Return function status */
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return HAL_OK;
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         reset values.
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeInit(CAN_HandleTypeDef *hcan)
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check CAN handle */
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan == NULL)
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check the parameters */
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Stop the CAN module */
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   (void)HAL_CAN_Stop(hcan);
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->MspDeInitCallback == NULL)
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->MspDeInitCallback = HAL_CAN_MspDeInit; /* Legacy weak MspDeInit */
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   hcan->MspDeInitCallback(hcan);
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_MspDeInit(hcan);
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* (USE_HAL_CAN_REGISTER_CALLBACKS) */
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 10


 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Reset the CAN peripheral */
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_RESET);
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Reset the CAN ErrorCode */
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Change CAN state */
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_RESET;
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Return function status */
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return HAL_OK;
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Initializes the CAN MSP.
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_MspInit(CAN_HandleTypeDef *hcan)
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
  30              		.loc 1 507 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
  35              		.loc 1 509 3 view .LVU1
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_MspInit could be implemented in the user file
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
  36              		.loc 1 514 1 is_stmt 0 view .LVU2
  37 0000 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE323:
  41              		.section	.text.HAL_CAN_Init,"ax",%progbits
  42              		.align	1
  43              		.global	HAL_CAN_Init
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	HAL_CAN_Init:
  49              	.LVL1:
  50              	.LFB321:
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t tickstart;
  51              		.loc 1 275 1 is_stmt 1 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  55              		.loc 1 276 3 view .LVU4
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
  56              		.loc 1 279 3 view .LVU5
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 11


 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
  57              		.loc 1 279 6 is_stmt 0 view .LVU6
  58 0000 0028     		cmp	r0, #0
  59 0002 00F0A180 		beq	.L21
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t tickstart;
  60              		.loc 1 275 1 view .LVU7
  61 0006 38B5     		push	{r3, r4, r5, lr}
  62              		.cfi_def_cfa_offset 16
  63              		.cfi_offset 3, -16
  64              		.cfi_offset 4, -12
  65              		.cfi_offset 5, -8
  66              		.cfi_offset 14, -4
  67 0008 0446     		mov	r4, r0
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
  68              		.loc 1 285 3 is_stmt 1 view .LVU8
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
  69              		.loc 1 286 3 view .LVU9
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
  70              		.loc 1 287 3 view .LVU10
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
  71              		.loc 1 288 3 view .LVU11
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
  72              		.loc 1 289 3 view .LVU12
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
  73              		.loc 1 290 3 view .LVU13
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
  74              		.loc 1 291 3 view .LVU14
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
  75              		.loc 1 292 3 view .LVU15
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
  76              		.loc 1 293 3 view .LVU16
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
  77              		.loc 1 294 3 view .LVU17
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
  78              		.loc 1 295 3 view .LVU18
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  79              		.loc 1 296 3 view .LVU19
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
  80              		.loc 1 326 3 view .LVU20
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
  81              		.loc 1 326 11 is_stmt 0 view .LVU21
  82 000a 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
  83              		.loc 1 326 6 view .LVU22
  84 000e D3B1     		cbz	r3, .L26
  85              	.LVL2:
  86              	.L4:
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  87              		.loc 1 334 3 is_stmt 1 view .LVU23
  88 0010 2268     		ldr	r2, [r4]
  89 0012 1368     		ldr	r3, [r2]
  90 0014 43F00103 		orr	r3, r3, #1
  91 0018 1360     		str	r3, [r2]
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  92              		.loc 1 337 3 view .LVU24
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  93              		.loc 1 337 15 is_stmt 0 view .LVU25
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 12


  94 001a FFF7FEFF 		bl	HAL_GetTick
  95              	.LVL3:
  96 001e 0546     		mov	r5, r0
  97              	.LVL4:
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
  98              		.loc 1 340 3 is_stmt 1 view .LVU26
  99              	.L5:
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 100              		.loc 1 340 47 view .LVU27
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 101              		.loc 1 340 15 is_stmt 0 view .LVU28
 102 0020 2368     		ldr	r3, [r4]
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 103              		.loc 1 340 25 view .LVU29
 104 0022 5A68     		ldr	r2, [r3, #4]
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 105              		.loc 1 340 47 view .LVU30
 106 0024 12F0010F 		tst	r2, #1
 107 0028 10D1     		bne	.L27
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 108              		.loc 1 342 5 is_stmt 1 view .LVU31
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 109              		.loc 1 342 10 is_stmt 0 view .LVU32
 110 002a FFF7FEFF 		bl	HAL_GetTick
 111              	.LVL5:
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 112              		.loc 1 342 24 view .LVU33
 113 002e 401B     		subs	r0, r0, r5
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 114              		.loc 1 342 8 view .LVU34
 115 0030 0A28     		cmp	r0, #10
 116 0032 F5D9     		bls	.L5
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 117              		.loc 1 345 7 is_stmt 1 view .LVU35
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 118              		.loc 1 345 11 is_stmt 0 view .LVU36
 119 0034 636A     		ldr	r3, [r4, #36]
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 120              		.loc 1 345 23 view .LVU37
 121 0036 43F40033 		orr	r3, r3, #131072
 122 003a 6362     		str	r3, [r4, #36]
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 123              		.loc 1 348 7 is_stmt 1 view .LVU38
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 124              		.loc 1 348 19 is_stmt 0 view .LVU39
 125 003c 0523     		movs	r3, #5
 126 003e 84F82030 		strb	r3, [r4, #32]
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 127              		.loc 1 350 7 is_stmt 1 view .LVU40
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 128              		.loc 1 350 14 is_stmt 0 view .LVU41
 129 0042 0120     		movs	r0, #1
 130              	.L3:
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 131              		.loc 1 450 1 view .LVU42
 132 0044 38BD     		pop	{r3, r4, r5, pc}
 133              	.LVL6:
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 13


 134              	.L26:
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 135              		.loc 1 329 5 is_stmt 1 view .LVU43
 136 0046 FFF7FEFF 		bl	HAL_CAN_MspInit
 137              	.LVL7:
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 138              		.loc 1 329 5 is_stmt 0 view .LVU44
 139 004a E1E7     		b	.L4
 140              	.LVL8:
 141              	.L27:
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 142              		.loc 1 355 3 is_stmt 1 view .LVU45
 143 004c 1A68     		ldr	r2, [r3]
 144 004e 22F00202 		bic	r2, r2, #2
 145 0052 1A60     		str	r2, [r3]
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 146              		.loc 1 358 3 view .LVU46
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 147              		.loc 1 358 15 is_stmt 0 view .LVU47
 148 0054 FFF7FEFF 		bl	HAL_GetTick
 149              	.LVL9:
 150 0058 0546     		mov	r5, r0
 151              	.LVL10:
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 152              		.loc 1 361 3 is_stmt 1 view .LVU48
 153              	.L7:
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 154              		.loc 1 361 47 view .LVU49
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 155              		.loc 1 361 15 is_stmt 0 view .LVU50
 156 005a 2368     		ldr	r3, [r4]
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 157              		.loc 1 361 25 view .LVU51
 158 005c 5A68     		ldr	r2, [r3, #4]
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 159              		.loc 1 361 47 view .LVU52
 160 005e 12F0020F 		tst	r2, #2
 161 0062 0DD0     		beq	.L28
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 162              		.loc 1 363 5 is_stmt 1 view .LVU53
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 163              		.loc 1 363 10 is_stmt 0 view .LVU54
 164 0064 FFF7FEFF 		bl	HAL_GetTick
 165              	.LVL11:
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 166              		.loc 1 363 24 view .LVU55
 167 0068 401B     		subs	r0, r0, r5
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 168              		.loc 1 363 8 view .LVU56
 169 006a 0A28     		cmp	r0, #10
 170 006c F5D9     		bls	.L7
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 171              		.loc 1 366 7 is_stmt 1 view .LVU57
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 172              		.loc 1 366 11 is_stmt 0 view .LVU58
 173 006e 636A     		ldr	r3, [r4, #36]
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 14


 174              		.loc 1 366 23 view .LVU59
 175 0070 43F40033 		orr	r3, r3, #131072
 176 0074 6362     		str	r3, [r4, #36]
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 177              		.loc 1 369 7 is_stmt 1 view .LVU60
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 178              		.loc 1 369 19 is_stmt 0 view .LVU61
 179 0076 0523     		movs	r3, #5
 180 0078 84F82030 		strb	r3, [r4, #32]
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 181              		.loc 1 371 7 is_stmt 1 view .LVU62
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 182              		.loc 1 371 14 is_stmt 0 view .LVU63
 183 007c 0120     		movs	r0, #1
 184 007e E1E7     		b	.L3
 185              	.L28:
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 186              		.loc 1 376 3 is_stmt 1 view .LVU64
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 187              		.loc 1 376 17 is_stmt 0 view .LVU65
 188 0080 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 189              		.loc 1 376 6 view .LVU66
 190 0082 012A     		cmp	r2, #1
 191 0084 3DD0     		beq	.L29
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 192              		.loc 1 382 5 is_stmt 1 view .LVU67
 193 0086 1A68     		ldr	r2, [r3]
 194 0088 22F08002 		bic	r2, r2, #128
 195 008c 1A60     		str	r2, [r3]
 196              	.L10:
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 197              		.loc 1 386 3 view .LVU68
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 198              		.loc 1 386 17 is_stmt 0 view .LVU69
 199 008e 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 200              		.loc 1 386 6 view .LVU70
 201 0090 012B     		cmp	r3, #1
 202 0092 3BD0     		beq	.L30
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 203              		.loc 1 392 5 is_stmt 1 view .LVU71
 204 0094 2268     		ldr	r2, [r4]
 205 0096 1368     		ldr	r3, [r2]
 206 0098 23F04003 		bic	r3, r3, #64
 207 009c 1360     		str	r3, [r2]
 208              	.L12:
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 209              		.loc 1 396 3 view .LVU72
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 210              		.loc 1 396 17 is_stmt 0 view .LVU73
 211 009e A37E     		ldrb	r3, [r4, #26]	@ zero_extendqisi2
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 212              		.loc 1 396 6 view .LVU74
 213 00a0 012B     		cmp	r3, #1
 214 00a2 39D0     		beq	.L31
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 15


 215              		.loc 1 402 5 is_stmt 1 view .LVU75
 216 00a4 2268     		ldr	r2, [r4]
 217 00a6 1368     		ldr	r3, [r2]
 218 00a8 23F02003 		bic	r3, r3, #32
 219 00ac 1360     		str	r3, [r2]
 220              	.L14:
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 221              		.loc 1 406 3 view .LVU76
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 222              		.loc 1 406 17 is_stmt 0 view .LVU77
 223 00ae E37E     		ldrb	r3, [r4, #27]	@ zero_extendqisi2
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 224              		.loc 1 406 6 view .LVU78
 225 00b0 012B     		cmp	r3, #1
 226 00b2 37D0     		beq	.L32
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 227              		.loc 1 412 5 is_stmt 1 view .LVU79
 228 00b4 2268     		ldr	r2, [r4]
 229 00b6 1368     		ldr	r3, [r2]
 230 00b8 43F01003 		orr	r3, r3, #16
 231 00bc 1360     		str	r3, [r2]
 232              	.L16:
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 233              		.loc 1 416 3 view .LVU80
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 234              		.loc 1 416 17 is_stmt 0 view .LVU81
 235 00be 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 236              		.loc 1 416 6 view .LVU82
 237 00c0 012B     		cmp	r3, #1
 238 00c2 35D0     		beq	.L33
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 239              		.loc 1 422 5 is_stmt 1 view .LVU83
 240 00c4 2268     		ldr	r2, [r4]
 241 00c6 1368     		ldr	r3, [r2]
 242 00c8 23F00803 		bic	r3, r3, #8
 243 00cc 1360     		str	r3, [r2]
 244              	.L18:
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 245              		.loc 1 426 3 view .LVU84
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 246              		.loc 1 426 17 is_stmt 0 view .LVU85
 247 00ce 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 248              		.loc 1 426 6 view .LVU86
 249 00d0 012B     		cmp	r3, #1
 250 00d2 33D0     		beq	.L34
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 251              		.loc 1 432 5 is_stmt 1 view .LVU87
 252 00d4 2268     		ldr	r2, [r4]
 253 00d6 1368     		ldr	r3, [r2]
 254 00d8 23F00403 		bic	r3, r3, #4
 255 00dc 1360     		str	r3, [r2]
 256              	.L20:
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 257              		.loc 1 436 3 view .LVU88
 258 00de A368     		ldr	r3, [r4, #8]
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 16


 259 00e0 E268     		ldr	r2, [r4, #12]
 260 00e2 1343     		orrs	r3, r3, r2
 261 00e4 2269     		ldr	r2, [r4, #16]
 262 00e6 1343     		orrs	r3, r3, r2
 263 00e8 6269     		ldr	r2, [r4, #20]
 264 00ea 1343     		orrs	r3, r3, r2
 265 00ec 6268     		ldr	r2, [r4, #4]
 266 00ee 013A     		subs	r2, r2, #1
 267 00f0 2168     		ldr	r1, [r4]
 268 00f2 1343     		orrs	r3, r3, r2
 269 00f4 CB61     		str	r3, [r1, #28]
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 270              		.loc 1 443 3 view .LVU89
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 271              		.loc 1 443 19 is_stmt 0 view .LVU90
 272 00f6 0020     		movs	r0, #0
 273 00f8 6062     		str	r0, [r4, #36]
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 274              		.loc 1 446 3 is_stmt 1 view .LVU91
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 275              		.loc 1 446 15 is_stmt 0 view .LVU92
 276 00fa 0123     		movs	r3, #1
 277 00fc 84F82030 		strb	r3, [r4, #32]
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 278              		.loc 1 449 3 is_stmt 1 view .LVU93
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 279              		.loc 1 449 10 is_stmt 0 view .LVU94
 280 0100 A0E7     		b	.L3
 281              	.L29:
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 282              		.loc 1 378 5 is_stmt 1 view .LVU95
 283 0102 1A68     		ldr	r2, [r3]
 284 0104 42F08002 		orr	r2, r2, #128
 285 0108 1A60     		str	r2, [r3]
 286 010a C0E7     		b	.L10
 287              	.L30:
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 288              		.loc 1 388 5 view .LVU96
 289 010c 2268     		ldr	r2, [r4]
 290 010e 1368     		ldr	r3, [r2]
 291 0110 43F04003 		orr	r3, r3, #64
 292 0114 1360     		str	r3, [r2]
 293 0116 C2E7     		b	.L12
 294              	.L31:
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 295              		.loc 1 398 5 view .LVU97
 296 0118 2268     		ldr	r2, [r4]
 297 011a 1368     		ldr	r3, [r2]
 298 011c 43F02003 		orr	r3, r3, #32
 299 0120 1360     		str	r3, [r2]
 300 0122 C4E7     		b	.L14
 301              	.L32:
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 302              		.loc 1 408 5 view .LVU98
 303 0124 2268     		ldr	r2, [r4]
 304 0126 1368     		ldr	r3, [r2]
 305 0128 23F01003 		bic	r3, r3, #16
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 17


 306 012c 1360     		str	r3, [r2]
 307 012e C6E7     		b	.L16
 308              	.L33:
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 309              		.loc 1 418 5 view .LVU99
 310 0130 2268     		ldr	r2, [r4]
 311 0132 1368     		ldr	r3, [r2]
 312 0134 43F00803 		orr	r3, r3, #8
 313 0138 1360     		str	r3, [r2]
 314 013a C8E7     		b	.L18
 315              	.L34:
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 316              		.loc 1 428 5 view .LVU100
 317 013c 2268     		ldr	r2, [r4]
 318 013e 1368     		ldr	r3, [r2]
 319 0140 43F00403 		orr	r3, r3, #4
 320 0144 1360     		str	r3, [r2]
 321 0146 CAE7     		b	.L20
 322              	.LVL12:
 323              	.L21:
 324              		.cfi_def_cfa_offset 0
 325              		.cfi_restore 3
 326              		.cfi_restore 4
 327              		.cfi_restore 5
 328              		.cfi_restore 14
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 329              		.loc 1 281 12 is_stmt 0 view .LVU101
 330 0148 0120     		movs	r0, #1
 331              	.LVL13:
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 332              		.loc 1 450 1 view .LVU102
 333 014a 7047     		bx	lr
 334              		.cfi_endproc
 335              	.LFE321:
 337              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 338              		.align	1
 339              		.weak	HAL_CAN_MspDeInit
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 344              	HAL_CAN_MspDeInit:
 345              	.LVL14:
 346              	.LFB324:
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  DeInitializes the CAN MSP.
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_MspDeInit(CAN_HandleTypeDef *hcan)
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 347              		.loc 1 523 1 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              		@ link register save eliminated.
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 18


 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 352              		.loc 1 525 3 view .LVU104
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_MspDeInit could be implemented in the user file
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 353              		.loc 1 530 1 is_stmt 0 view .LVU105
 354 0000 7047     		bx	lr
 355              		.cfi_endproc
 356              	.LFE324:
 358              		.section	.text.HAL_CAN_ConfigFilter,"ax",%progbits
 359              		.align	1
 360              		.global	HAL_CAN_ConfigFilter
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 365              	HAL_CAN_ConfigFilter:
 366              	.LVL15:
 367              	.LFB325:
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Register a CAN CallBack.
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         To be used instead of the weak predefined callback
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for CAN module
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  CallbackID ID of the callback to be registered
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         This parameter can be one of the following values:
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  pCallback pointer to the Callback function
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Callb
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                            void (* pCallback)(CAN_HandleTypeDef *_hcan))
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (pCallback == NULL)
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update the error code */
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 19


 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     switch (CallbackID)
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = pCallback;
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = pCallback;
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = pCallback;
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = pCallback;
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = pCallback;
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = pCallback;
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = pCallback;
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->RxFifo0FullCallback = pCallback;
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = pCallback;
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->RxFifo1FullCallback = pCallback;
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->SleepCallback = pCallback;
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = pCallback;
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 20


 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCallback = pCallback;
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       default :
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Update the error code */
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Return error status */
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         status =  HAL_ERROR;
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     switch (CallbackID)
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       default :
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Update the error code */
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Return error status */
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         status =  HAL_ERROR;
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update the error code */
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return error status */
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     status =  HAL_ERROR;
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return status;
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Unregister a CAN CallBack.
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         CAN callback is redirected to the weak predefined callback
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 21


 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for CAN module
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  CallbackID ID of the callback to be unregistered
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         This parameter can be one of the following values:
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_UnRegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Cal
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     switch (CallbackID)
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = HAL_CAN_TxMailbox0CompleteCallback;
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = HAL_CAN_TxMailbox1CompleteCallback;
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = HAL_CAN_TxMailbox2CompleteCallback;
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = HAL_CAN_TxMailbox0AbortCallback;
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = HAL_CAN_TxMailbox1AbortCallback;
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = HAL_CAN_TxMailbox2AbortCallback;
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = HAL_CAN_RxFifo0MsgPendingCallback;
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 22


 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->RxFifo0FullCallback = HAL_CAN_RxFifo0FullCallback;
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = HAL_CAN_RxFifo1MsgPendingCallback;
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->RxFifo1FullCallback = HAL_CAN_RxFifo1FullCallback;
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->SleepCallback = HAL_CAN_SleepCallback;
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = HAL_CAN_WakeUpFromRxMsgCallback;
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCallback = HAL_CAN_ErrorCallback;
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       default :
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Update the error code */
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Return error status */
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         status =  HAL_ERROR;
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     switch (CallbackID)
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       default :
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Update the error code */
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Return error status */
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 23


 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         status =  HAL_ERROR;
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update the error code */
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return error status */
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     status =  HAL_ERROR;
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return status;
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @}
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group2 Configuration functions
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****  *  @brief    Configuration functions.
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****  *
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @verbatim
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****               ##### Configuration functions #####
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     [..]  This section provides functions allowing to:
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_ConfigFilter            : Configure the CAN reception filters
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @endverbatim
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @{
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         parameters in the CAN_FilterInitStruct.
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  sFilterConfig pointer to a CAN_FilterTypeDef structure that
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         contains the filter configuration information.
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ConfigFilter(CAN_HandleTypeDef *hcan, const CAN_FilterTypeDef *sFilterCon
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 368              		.loc 1 840 1 is_stmt 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t filternbrbitpos;
 372              		.loc 1 841 3 view .LVU107
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   CAN_TypeDef *can_ip = hcan->Instance;
 373              		.loc 1 842 3 view .LVU108
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 374              		.loc 1 843 3 view .LVU109
 375              		.loc 1 843 24 is_stmt 0 view .LVU110
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 24


 376 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 377              	.LVL16:
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 378              		.loc 1 845 3 is_stmt 1 view .LVU111
 379              		.loc 1 845 38 is_stmt 0 view .LVU112
 380 0004 013B     		subs	r3, r3, #1
 381              	.LVL17:
 382              		.loc 1 845 38 view .LVU113
 383 0006 DBB2     		uxtb	r3, r3
 384              		.loc 1 845 6 view .LVU114
 385 0008 012B     		cmp	r3, #1
 386 000a 05D9     		bls	.L50
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check the parameters */
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdHigh));
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if   defined(CAN2)
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* CAN1 and CAN2 are dual instances with 28 common filters banks */
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Select master instance to access the filter banks */
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     can_ip = CAN1;
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check the parameters */
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->FilterBank));
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* CAN1 is single instance with 14 dedicated filters banks */
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check the parameters */
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_SINGLE(sFilterConfig->FilterBank));
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Initialisation mode for the filter */
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(can_ip->FMR, CAN_FMR_FINIT);
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if   defined(CAN2)
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Select the start filter number of CAN2 slave instance */
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_CAN2SB);
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Convert filter number into bit position */
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     filternbrbitpos = (uint32_t)1 << (sFilterConfig->FilterBank & 0x1FU);
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Filter Deactivation */
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(can_ip->FA1R, filternbrbitpos);
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Filter Scale */
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_16BIT)
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 25


 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* 16-bit scale for the filter */
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       CLEAR_BIT(can_ip->FS1R, filternbrbitpos);
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* First 16-bit identifier and First 16-bit mask */
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Or First 16-bit identifier and Second 16-bit identifier */
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Second 16-bit identifier and Second 16-bit mask */
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_32BIT)
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* 32-bit scale for the filter */
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       SET_BIT(can_ip->FS1R, filternbrbitpos);
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* 32-bit identifier or First 32-bit identifier */
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* 32-bit mask or Second 32-bit identifier */
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Filter Mode */
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (sFilterConfig->FilterMode == CAN_FILTERMODE_IDMASK)
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Id/Mask mode for the filter*/
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       CLEAR_BIT(can_ip->FM1R, filternbrbitpos);
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Identifier list mode for the filter*/
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       SET_BIT(can_ip->FM1R, filternbrbitpos);
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Filter FIFO assignment */
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (sFilterConfig->FilterFIFOAssignment == CAN_FILTER_FIFO0)
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* FIFO 0 assignation for the filter */
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       CLEAR_BIT(can_ip->FFA1R, filternbrbitpos);
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     else
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* FIFO 1 assignation for the filter */
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       SET_BIT(can_ip->FFA1R, filternbrbitpos);
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 26


 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Filter activation */
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (sFilterConfig->FilterActivation == CAN_FILTER_ENABLE)
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       SET_BIT(can_ip->FA1R, filternbrbitpos);
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Leave the initialisation mode for the filter */
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_FINIT);
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return function status */
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_OK;
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 387              		.loc 1 962 5 is_stmt 1 view .LVU115
 388              		.loc 1 962 9 is_stmt 0 view .LVU116
 389 000c 436A     		ldr	r3, [r0, #36]
 390              		.loc 1 962 21 view .LVU117
 391 000e 43F48023 		orr	r3, r3, #262144
 392 0012 4362     		str	r3, [r0, #36]
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 393              		.loc 1 964 5 is_stmt 1 view .LVU118
 394              		.loc 1 964 12 is_stmt 0 view .LVU119
 395 0014 0120     		movs	r0, #1
 396              	.LVL18:
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 397              		.loc 1 966 1 view .LVU120
 398 0016 7047     		bx	lr
 399              	.LVL19:
 400              	.L50:
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t filternbrbitpos;
 401              		.loc 1 840 1 view .LVU121
 402 0018 30B5     		push	{r4, r5, lr}
 403              		.cfi_def_cfa_offset 12
 404              		.cfi_offset 4, -12
 405              		.cfi_offset 5, -8
 406              		.cfi_offset 14, -4
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 407              		.loc 1 849 5 is_stmt 1 view .LVU122
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 408              		.loc 1 850 5 view .LVU123
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 409              		.loc 1 851 5 view .LVU124
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 410              		.loc 1 852 5 view .LVU125
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 411              		.loc 1 853 5 view .LVU126
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 412              		.loc 1 854 5 view .LVU127
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 413              		.loc 1 855 5 view .LVU128
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 414              		.loc 1 856 5 view .LVU129
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 27


 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 415              		.loc 1 861 5 view .LVU130
 416              	.LVL20:
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 417              		.loc 1 864 5 view .LVU131
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
 418              		.loc 1 865 5 view .LVU132
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 419              		.loc 1 874 5 view .LVU133
 420 001a 464B     		ldr	r3, .L53
 421 001c D3F80022 		ldr	r2, [r3, #512]
 422 0020 42F00102 		orr	r2, r2, #1
 423 0024 C3F80022 		str	r2, [r3, #512]
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 424              		.loc 1 878 5 view .LVU134
 425 0028 D3F80022 		ldr	r2, [r3, #512]
 426 002c 22F47C52 		bic	r2, r2, #16128
 427 0030 C3F80022 		str	r2, [r3, #512]
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 428              		.loc 1 879 5 view .LVU135
 429 0034 D3F80022 		ldr	r2, [r3, #512]
 430 0038 486A     		ldr	r0, [r1, #36]
 431              	.LVL21:
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 432              		.loc 1 879 5 is_stmt 0 view .LVU136
 433 003a 42EA0022 		orr	r2, r2, r0, lsl #8
 434 003e C3F80022 		str	r2, [r3, #512]
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 435              		.loc 1 883 5 is_stmt 1 view .LVU137
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 436              		.loc 1 883 52 is_stmt 0 view .LVU138
 437 0042 4A69     		ldr	r2, [r1, #20]
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 438              		.loc 1 883 65 view .LVU139
 439 0044 02F01F02 		and	r2, r2, #31
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 440              		.loc 1 883 21 view .LVU140
 441 0048 0120     		movs	r0, #1
 442 004a 00FA02F2 		lsl	r2, r0, r2
 443              	.LVL22:
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 444              		.loc 1 886 5 is_stmt 1 view .LVU141
 445 004e D3F81C02 		ldr	r0, [r3, #540]
 446 0052 6FEA020C 		mvn	ip, r2
 447 0056 20EA0200 		bic	r0, r0, r2
 448 005a C3F81C02 		str	r0, [r3, #540]
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 449              		.loc 1 889 5 view .LVU142
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 450              		.loc 1 889 22 is_stmt 0 view .LVU143
 451 005e CB69     		ldr	r3, [r1, #28]
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 452              		.loc 1 889 8 view .LVU144
 453 0060 C3B9     		cbnz	r3, .L38
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 454              		.loc 1 892 7 is_stmt 1 view .LVU145
 455 0062 344B     		ldr	r3, .L53
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 28


 456 0064 D3F80C02 		ldr	r0, [r3, #524]
 457 0068 0CEA0000 		and	r0, ip, r0
 458 006c C3F80C02 		str	r0, [r3, #524]
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 459              		.loc 1 896 7 view .LVU146
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 460              		.loc 1 898 22 is_stmt 0 view .LVU147
 461 0070 8C88     		ldrh	r4, [r1, #4]
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 462              		.loc 1 896 44 view .LVU148
 463 0072 4869     		ldr	r0, [r1, #20]
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 464              		.loc 1 897 75 view .LVU149
 465 0074 CD68     		ldr	r5, [r1, #12]
 466 0076 44EA0544 		orr	r4, r4, r5, lsl #16
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 467              		.loc 1 896 62 view .LVU150
 468 007a 4830     		adds	r0, r0, #72
 469 007c 43F83040 		str	r4, [r3, r0, lsl #3]
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 470              		.loc 1 902 7 is_stmt 1 view .LVU151
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 471              		.loc 1 903 48 is_stmt 0 view .LVU152
 472 0080 8C68     		ldr	r4, [r1, #8]
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 473              		.loc 1 904 22 view .LVU153
 474 0082 0888     		ldrh	r0, [r1]
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 475              		.loc 1 903 76 view .LVU154
 476 0084 40EA0440 		orr	r0, r0, r4, lsl #16
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 477              		.loc 1 902 62 view .LVU155
 478 0088 4C69     		ldr	r4, [r1, #20]
 479 008a 04F1480E 		add	lr, r4, #72
 480 008e 03EBCE03 		add	r3, r3, lr, lsl #3
 481 0092 5860     		str	r0, [r3, #4]
 482              	.L38:
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 483              		.loc 1 907 5 is_stmt 1 view .LVU156
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 484              		.loc 1 907 22 is_stmt 0 view .LVU157
 485 0094 CB69     		ldr	r3, [r1, #28]
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 486              		.loc 1 907 8 view .LVU158
 487 0096 012B     		cmp	r3, #1
 488 0098 1ED0     		beq	.L51
 489              	.L39:
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 490              		.loc 1 924 5 is_stmt 1 view .LVU159
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 491              		.loc 1 924 22 is_stmt 0 view .LVU160
 492 009a 8B69     		ldr	r3, [r1, #24]
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 493              		.loc 1 924 8 view .LVU161
 494 009c 002B     		cmp	r3, #0
 495 009e 33D1     		bne	.L40
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 29


 496              		.loc 1 927 7 is_stmt 1 view .LVU162
 497 00a0 2448     		ldr	r0, .L53
 498 00a2 D0F80432 		ldr	r3, [r0, #516]
 499 00a6 0CEA0303 		and	r3, ip, r3
 500 00aa C0F80432 		str	r3, [r0, #516]
 501              	.L41:
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 502              		.loc 1 936 5 view .LVU163
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 503              		.loc 1 936 22 is_stmt 0 view .LVU164
 504 00ae 0B69     		ldr	r3, [r1, #16]
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 505              		.loc 1 936 8 view .LVU165
 506 00b0 8BBB     		cbnz	r3, .L42
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 507              		.loc 1 939 7 is_stmt 1 view .LVU166
 508 00b2 2048     		ldr	r0, .L53
 509 00b4 D0F81432 		ldr	r3, [r0, #532]
 510 00b8 0CEA0303 		and	r3, ip, r3
 511 00bc C0F81432 		str	r3, [r0, #532]
 512              	.L43:
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 513              		.loc 1 948 5 view .LVU167
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 514              		.loc 1 948 22 is_stmt 0 view .LVU168
 515 00c0 0B6A     		ldr	r3, [r1, #32]
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 516              		.loc 1 948 8 view .LVU169
 517 00c2 012B     		cmp	r3, #1
 518 00c4 2ED0     		beq	.L52
 519              	.LVL23:
 520              	.L44:
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 521              		.loc 1 954 5 is_stmt 1 view .LVU170
 522 00c6 1B4A     		ldr	r2, .L53
 523              	.LVL24:
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 524              		.loc 1 954 5 is_stmt 0 view .LVU171
 525 00c8 D2F80032 		ldr	r3, [r2, #512]
 526 00cc 23F00103 		bic	r3, r3, #1
 527 00d0 C2F80032 		str	r3, [r2, #512]
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 528              		.loc 1 957 5 is_stmt 1 view .LVU172
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 529              		.loc 1 957 12 is_stmt 0 view .LVU173
 530 00d4 0020     		movs	r0, #0
 531              		.loc 1 966 1 view .LVU174
 532 00d6 30BD     		pop	{r4, r5, pc}
 533              	.LVL25:
 534              	.L51:
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 535              		.loc 1 910 7 is_stmt 1 view .LVU175
 536 00d8 164B     		ldr	r3, .L53
 537 00da D3F80C02 		ldr	r0, [r3, #524]
 538 00de 1043     		orrs	r0, r0, r2
 539 00e0 C3F80C02 		str	r0, [r3, #524]
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 30


 540              		.loc 1 913 7 view .LVU176
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 541              		.loc 1 915 22 is_stmt 0 view .LVU177
 542 00e4 8C88     		ldrh	r4, [r1, #4]
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 543              		.loc 1 913 44 view .LVU178
 544 00e6 4869     		ldr	r0, [r1, #20]
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 545              		.loc 1 914 72 view .LVU179
 546 00e8 0D68     		ldr	r5, [r1]
 547 00ea 44EA0544 		orr	r4, r4, r5, lsl #16
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 548              		.loc 1 913 62 view .LVU180
 549 00ee 4830     		adds	r0, r0, #72
 550 00f0 43F83040 		str	r4, [r3, r0, lsl #3]
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 551              		.loc 1 918 7 is_stmt 1 view .LVU181
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 552              		.loc 1 920 22 is_stmt 0 view .LVU182
 553 00f4 8889     		ldrh	r0, [r1, #12]
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 554              		.loc 1 918 44 view .LVU183
 555 00f6 4C69     		ldr	r4, [r1, #20]
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 556              		.loc 1 919 76 view .LVU184
 557 00f8 8D68     		ldr	r5, [r1, #8]
 558 00fa 40EA0540 		orr	r0, r0, r5, lsl #16
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 559              		.loc 1 918 62 view .LVU185
 560 00fe 4834     		adds	r4, r4, #72
 561 0100 03EBC403 		add	r3, r3, r4, lsl #3
 562 0104 5860     		str	r0, [r3, #4]
 563 0106 C8E7     		b	.L39
 564              	.L40:
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 565              		.loc 1 932 7 is_stmt 1 view .LVU186
 566 0108 0A48     		ldr	r0, .L53
 567 010a D0F80432 		ldr	r3, [r0, #516]
 568 010e 1343     		orrs	r3, r3, r2
 569 0110 C0F80432 		str	r3, [r0, #516]
 570 0114 CBE7     		b	.L41
 571              	.L42:
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 572              		.loc 1 944 7 view .LVU187
 573 0116 0748     		ldr	r0, .L53
 574 0118 D0F81432 		ldr	r3, [r0, #532]
 575 011c 1343     		orrs	r3, r3, r2
 576 011e C0F81432 		str	r3, [r0, #532]
 577 0122 CDE7     		b	.L43
 578              	.L52:
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 579              		.loc 1 950 7 view .LVU188
 580 0124 0349     		ldr	r1, .L53
 581              	.LVL26:
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 582              		.loc 1 950 7 is_stmt 0 view .LVU189
 583 0126 D1F81C32 		ldr	r3, [r1, #540]
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 31


 584 012a 1343     		orrs	r3, r3, r2
 585 012c C1F81C32 		str	r3, [r1, #540]
 586 0130 C9E7     		b	.L44
 587              	.L54:
 588 0132 00BF     		.align	2
 589              	.L53:
 590 0134 00640040 		.word	1073767424
 591              		.cfi_endproc
 592              	.LFE325:
 594              		.section	.text.HAL_CAN_Start,"ax",%progbits
 595              		.align	1
 596              		.global	HAL_CAN_Start
 597              		.syntax unified
 598              		.thumb
 599              		.thumb_func
 601              	HAL_CAN_Start:
 602              	.LVL27:
 603              	.LFB326:
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @}
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group3 Control functions
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****  *  @brief    Control functions
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****  *
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @verbatim
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                       ##### Control functions #####
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     [..]  This section provides functions allowing to:
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_Start                    : Start the CAN module
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_Stop                     : Stop the CAN module
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_RequestSleep             : Request sleep mode entry.
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_WakeUp                   : Wake up from sleep mode.
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_IsSleepActive            : Check is sleep mode is active.
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_AddTxMessage             : Add a message to the Tx mailboxes
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                              and activate the corresponding
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                              transmission request
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_AbortTxRequest           : Abort transmission request
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_GetTxMailboxesFreeLevel  : Return Tx mailboxes free level
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_IsTxMessagePending       : Check if a transmission request is
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                              pending on the selected Tx mailbox
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_GetRxMessage             : Get a CAN frame from the Rx FIFO
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_GetRxFifoFillLevel       : Return Rx FIFO fill level
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @endverbatim
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @{
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Start the CAN module.
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Start(CAN_HandleTypeDef *hcan)
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 32


1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 604              		.loc 1 1006 1 is_stmt 1 view -0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 0
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 608              		.loc 1 1006 1 is_stmt 0 view .LVU191
 609 0000 70B5     		push	{r4, r5, r6, lr}
 610              		.cfi_def_cfa_offset 16
 611              		.cfi_offset 4, -16
 612              		.cfi_offset 5, -12
 613              		.cfi_offset 6, -8
 614              		.cfi_offset 14, -4
 615 0002 0446     		mov	r4, r0
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t tickstart;
 616              		.loc 1 1007 3 is_stmt 1 view .LVU192
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 617              		.loc 1 1009 3 view .LVU193
 618              		.loc 1 1009 11 is_stmt 0 view .LVU194
 619 0004 90F82050 		ldrb	r5, [r0, #32]	@ zero_extendqisi2
 620 0008 EDB2     		uxtb	r5, r5
 621              		.loc 1 1009 6 view .LVU195
 622 000a 012D     		cmp	r5, #1
 623 000c 06D0     		beq	.L61
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Change CAN peripheral state */
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_LISTENING;
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Request leave initialisation */
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Get tick */
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     tickstart = HAL_GetTick();
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Wait the acknowledge */
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) != 0U)
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Check for the Timeout */
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Update error code */
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Change CAN state */
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         return HAL_ERROR;
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Reset the CAN ErrorCode */
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return function status */
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_OK;
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 33


1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_READY;
 624              		.loc 1 1045 5 is_stmt 1 view .LVU196
 625              		.loc 1 1045 9 is_stmt 0 view .LVU197
 626 000e 436A     		ldr	r3, [r0, #36]
 627              		.loc 1 1045 21 view .LVU198
 628 0010 43F40023 		orr	r3, r3, #524288
 629 0014 4362     		str	r3, [r0, #36]
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 630              		.loc 1 1047 5 is_stmt 1 view .LVU199
 631              		.loc 1 1047 12 is_stmt 0 view .LVU200
 632 0016 0125     		movs	r5, #1
 633              	.LVL28:
 634              	.L58:
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 635              		.loc 1 1049 1 view .LVU201
 636 0018 2846     		mov	r0, r5
 637 001a 70BD     		pop	{r4, r5, r6, pc}
 638              	.LVL29:
 639              	.L61:
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 640              		.loc 1 1012 5 is_stmt 1 view .LVU202
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 641              		.loc 1 1012 17 is_stmt 0 view .LVU203
 642 001c 0223     		movs	r3, #2
 643 001e 80F82030 		strb	r3, [r0, #32]
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 644              		.loc 1 1015 5 is_stmt 1 view .LVU204
 645 0022 0268     		ldr	r2, [r0]
 646 0024 1368     		ldr	r3, [r2]
 647 0026 23F00103 		bic	r3, r3, #1
 648 002a 1360     		str	r3, [r2]
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 649              		.loc 1 1018 5 view .LVU205
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 650              		.loc 1 1018 17 is_stmt 0 view .LVU206
 651 002c FFF7FEFF 		bl	HAL_GetTick
 652              	.LVL30:
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 653              		.loc 1 1018 17 view .LVU207
 654 0030 0646     		mov	r6, r0
 655              	.LVL31:
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 656              		.loc 1 1021 5 is_stmt 1 view .LVU208
 657              	.L57:
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 658              		.loc 1 1021 49 view .LVU209
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 659              		.loc 1 1021 17 is_stmt 0 view .LVU210
 660 0032 2368     		ldr	r3, [r4]
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 661              		.loc 1 1021 27 view .LVU211
 662 0034 5B68     		ldr	r3, [r3, #4]
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 34


 663              		.loc 1 1021 49 view .LVU212
 664 0036 13F0010F 		tst	r3, #1
 665 003a 0CD0     		beq	.L62
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 666              		.loc 1 1024 7 is_stmt 1 view .LVU213
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 667              		.loc 1 1024 12 is_stmt 0 view .LVU214
 668 003c FFF7FEFF 		bl	HAL_GetTick
 669              	.LVL32:
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 670              		.loc 1 1024 26 view .LVU215
 671 0040 831B     		subs	r3, r0, r6
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 672              		.loc 1 1024 10 view .LVU216
 673 0042 0A2B     		cmp	r3, #10
 674 0044 F5D9     		bls	.L57
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 675              		.loc 1 1027 9 is_stmt 1 view .LVU217
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 676              		.loc 1 1027 13 is_stmt 0 view .LVU218
 677 0046 636A     		ldr	r3, [r4, #36]
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 678              		.loc 1 1027 25 view .LVU219
 679 0048 43F40033 		orr	r3, r3, #131072
 680 004c 6362     		str	r3, [r4, #36]
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 681              		.loc 1 1030 9 is_stmt 1 view .LVU220
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 682              		.loc 1 1030 21 is_stmt 0 view .LVU221
 683 004e 0523     		movs	r3, #5
 684 0050 84F82030 		strb	r3, [r4, #32]
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 685              		.loc 1 1032 9 is_stmt 1 view .LVU222
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 686              		.loc 1 1032 16 is_stmt 0 view .LVU223
 687 0054 E0E7     		b	.L58
 688              	.L62:
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 689              		.loc 1 1037 5 is_stmt 1 view .LVU224
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 690              		.loc 1 1037 21 is_stmt 0 view .LVU225
 691 0056 0025     		movs	r5, #0
 692 0058 6562     		str	r5, [r4, #36]
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 693              		.loc 1 1040 5 is_stmt 1 view .LVU226
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 694              		.loc 1 1040 12 is_stmt 0 view .LVU227
 695 005a DDE7     		b	.L58
 696              		.cfi_endproc
 697              	.LFE326:
 699              		.section	.text.HAL_CAN_Stop,"ax",%progbits
 700              		.align	1
 701              		.global	HAL_CAN_Stop
 702              		.syntax unified
 703              		.thumb
 704              		.thumb_func
 706              	HAL_CAN_Stop:
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 35


 707              	.LVL33:
 708              	.LFB327:
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Stop the CAN module and enable access to configuration registers.
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Stop(CAN_HandleTypeDef *hcan)
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 709              		.loc 1 1058 1 is_stmt 1 view -0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713              		.loc 1 1058 1 is_stmt 0 view .LVU229
 714 0000 38B5     		push	{r3, r4, r5, lr}
 715              		.cfi_def_cfa_offset 16
 716              		.cfi_offset 3, -16
 717              		.cfi_offset 4, -12
 718              		.cfi_offset 5, -8
 719              		.cfi_offset 14, -4
 720 0002 0446     		mov	r4, r0
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t tickstart;
 721              		.loc 1 1059 3 is_stmt 1 view .LVU230
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_LISTENING)
 722              		.loc 1 1061 3 view .LVU231
 723              		.loc 1 1061 11 is_stmt 0 view .LVU232
 724 0004 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 725 0008 DBB2     		uxtb	r3, r3
 726              		.loc 1 1061 6 view .LVU233
 727 000a 022B     		cmp	r3, #2
 728 000c 05D0     		beq	.L69
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Request initialisation */
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Get tick */
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     tickstart = HAL_GetTick();
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Wait the acknowledge */
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Check for the Timeout */
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Update error code */
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Change CAN state */
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         return HAL_ERROR;
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 36


1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Exit from sleep mode */
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Change CAN peripheral state */
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return function status */
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_OK;
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_STARTED;
 729              		.loc 1 1097 5 is_stmt 1 view .LVU234
 730              		.loc 1 1097 9 is_stmt 0 view .LVU235
 731 000e 436A     		ldr	r3, [r0, #36]
 732              		.loc 1 1097 21 view .LVU236
 733 0010 43F48013 		orr	r3, r3, #1048576
 734 0014 4362     		str	r3, [r0, #36]
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 735              		.loc 1 1099 5 is_stmt 1 view .LVU237
 736              		.loc 1 1099 12 is_stmt 0 view .LVU238
 737 0016 0120     		movs	r0, #1
 738              	.LVL34:
 739              	.L66:
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 740              		.loc 1 1101 1 view .LVU239
 741 0018 38BD     		pop	{r3, r4, r5, pc}
 742              	.LVL35:
 743              	.L69:
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 744              		.loc 1 1064 5 is_stmt 1 view .LVU240
 745 001a 0268     		ldr	r2, [r0]
 746 001c 1368     		ldr	r3, [r2]
 747 001e 43F00103 		orr	r3, r3, #1
 748 0022 1360     		str	r3, [r2]
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 749              		.loc 1 1067 5 view .LVU241
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 750              		.loc 1 1067 17 is_stmt 0 view .LVU242
 751 0024 FFF7FEFF 		bl	HAL_GetTick
 752              	.LVL36:
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 753              		.loc 1 1067 17 view .LVU243
 754 0028 0546     		mov	r5, r0
 755              	.LVL37:
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 756              		.loc 1 1070 5 is_stmt 1 view .LVU244
 757              	.L65:
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 758              		.loc 1 1070 49 view .LVU245
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 759              		.loc 1 1070 17 is_stmt 0 view .LVU246
 760 002a 2368     		ldr	r3, [r4]
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 37


 761              		.loc 1 1070 27 view .LVU247
 762 002c 5A68     		ldr	r2, [r3, #4]
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 763              		.loc 1 1070 49 view .LVU248
 764 002e 12F0010F 		tst	r2, #1
 765 0032 0DD1     		bne	.L70
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 766              		.loc 1 1073 7 is_stmt 1 view .LVU249
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 767              		.loc 1 1073 12 is_stmt 0 view .LVU250
 768 0034 FFF7FEFF 		bl	HAL_GetTick
 769              	.LVL38:
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 770              		.loc 1 1073 26 view .LVU251
 771 0038 431B     		subs	r3, r0, r5
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 772              		.loc 1 1073 10 view .LVU252
 773 003a 0A2B     		cmp	r3, #10
 774 003c F5D9     		bls	.L65
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 775              		.loc 1 1076 9 is_stmt 1 view .LVU253
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 776              		.loc 1 1076 13 is_stmt 0 view .LVU254
 777 003e 636A     		ldr	r3, [r4, #36]
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 778              		.loc 1 1076 25 view .LVU255
 779 0040 43F40033 		orr	r3, r3, #131072
 780 0044 6362     		str	r3, [r4, #36]
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 781              		.loc 1 1079 9 is_stmt 1 view .LVU256
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 782              		.loc 1 1079 21 is_stmt 0 view .LVU257
 783 0046 0523     		movs	r3, #5
 784 0048 84F82030 		strb	r3, [r4, #32]
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 785              		.loc 1 1081 9 is_stmt 1 view .LVU258
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 786              		.loc 1 1081 16 is_stmt 0 view .LVU259
 787 004c 0120     		movs	r0, #1
 788 004e E3E7     		b	.L66
 789              	.L70:
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 790              		.loc 1 1086 5 is_stmt 1 view .LVU260
 791 0050 1A68     		ldr	r2, [r3]
 792 0052 22F00202 		bic	r2, r2, #2
 793 0056 1A60     		str	r2, [r3]
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 794              		.loc 1 1089 5 view .LVU261
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 795              		.loc 1 1089 17 is_stmt 0 view .LVU262
 796 0058 0123     		movs	r3, #1
 797 005a 84F82030 		strb	r3, [r4, #32]
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 798              		.loc 1 1092 5 is_stmt 1 view .LVU263
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 799              		.loc 1 1092 12 is_stmt 0 view .LVU264
 800 005e 0020     		movs	r0, #0
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 38


 801 0060 DAE7     		b	.L66
 802              		.cfi_endproc
 803              	.LFE327:
 805              		.section	.text.HAL_CAN_DeInit,"ax",%progbits
 806              		.align	1
 807              		.global	HAL_CAN_DeInit
 808              		.syntax unified
 809              		.thumb
 810              		.thumb_func
 812              	HAL_CAN_DeInit:
 813              	.LVL39:
 814              	.LFB322:
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check CAN handle */
 815              		.loc 1 460 1 is_stmt 1 view -0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 0
 818              		@ frame_needed = 0, uses_anonymous_args = 0
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 819              		.loc 1 462 3 view .LVU266
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 820              		.loc 1 462 6 is_stmt 0 view .LVU267
 821 0000 80B1     		cbz	r0, .L73
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check CAN handle */
 822              		.loc 1 460 1 view .LVU268
 823 0002 10B5     		push	{r4, lr}
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 4, -8
 826              		.cfi_offset 14, -4
 827 0004 0446     		mov	r4, r0
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 828              		.loc 1 468 3 is_stmt 1 view .LVU269
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 829              		.loc 1 471 3 view .LVU270
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 830              		.loc 1 471 9 is_stmt 0 view .LVU271
 831 0006 FFF7FEFF 		bl	HAL_CAN_Stop
 832              	.LVL40:
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* (USE_HAL_CAN_REGISTER_CALLBACKS) */
 833              		.loc 1 484 3 is_stmt 1 view .LVU272
 834 000a 2046     		mov	r0, r4
 835 000c FFF7FEFF 		bl	HAL_CAN_MspDeInit
 836              	.LVL41:
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 837              		.loc 1 488 3 view .LVU273
 838 0010 2268     		ldr	r2, [r4]
 839 0012 1368     		ldr	r3, [r2]
 840 0014 43F40043 		orr	r3, r3, #32768
 841 0018 1360     		str	r3, [r2]
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 842              		.loc 1 491 3 view .LVU274
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 843              		.loc 1 491 19 is_stmt 0 view .LVU275
 844 001a 0020     		movs	r0, #0
 845 001c 6062     		str	r0, [r4, #36]
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 846              		.loc 1 494 3 is_stmt 1 view .LVU276
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 39


 847              		.loc 1 494 15 is_stmt 0 view .LVU277
 848 001e 84F82000 		strb	r0, [r4, #32]
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 849              		.loc 1 497 3 is_stmt 1 view .LVU278
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 850              		.loc 1 498 1 is_stmt 0 view .LVU279
 851 0022 10BD     		pop	{r4, pc}
 852              	.LVL42:
 853              	.L73:
 854              		.cfi_def_cfa_offset 0
 855              		.cfi_restore 4
 856              		.cfi_restore 14
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 857              		.loc 1 464 12 view .LVU280
 858 0024 0120     		movs	r0, #1
 859              	.LVL43:
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 860              		.loc 1 498 1 view .LVU281
 861 0026 7047     		bx	lr
 862              		.cfi_endproc
 863              	.LFE322:
 865              		.section	.text.HAL_CAN_RequestSleep,"ax",%progbits
 866              		.align	1
 867              		.global	HAL_CAN_RequestSleep
 868              		.syntax unified
 869              		.thumb
 870              		.thumb_func
 872              	HAL_CAN_RequestSleep:
 873              	.LVL44:
 874              	.LFB328:
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Request the sleep mode (low power) entry.
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         When returning from this function, Sleep mode will be entered
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         as soon as the current CAN activity (transmission or reception
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         of a CAN frame) has been completed.
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status.
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RequestSleep(CAN_HandleTypeDef *hcan)
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 875              		.loc 1 1113 1 is_stmt 1 view -0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 0, uses_anonymous_args = 0
 879              		@ link register save eliminated.
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 880              		.loc 1 1114 3 view .LVU283
 881              		.loc 1 1114 24 is_stmt 0 view .LVU284
 882 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 883              	.LVL45:
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 884              		.loc 1 1116 3 is_stmt 1 view .LVU285
 885              		.loc 1 1116 38 is_stmt 0 view .LVU286
 886 0004 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 40


 887              	.LVL46:
 888              		.loc 1 1116 38 view .LVU287
 889 0006 DBB2     		uxtb	r3, r3
 890              		.loc 1 1116 6 view .LVU288
 891 0008 012B     		cmp	r3, #1
 892 000a 05D9     		bls	.L81
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Request Sleep mode */
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return function status */
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_OK;
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 893              		.loc 1 1128 5 is_stmt 1 view .LVU289
 894              		.loc 1 1128 9 is_stmt 0 view .LVU290
 895 000c 436A     		ldr	r3, [r0, #36]
 896              		.loc 1 1128 21 view .LVU291
 897 000e 43F48023 		orr	r3, r3, #262144
 898 0012 4362     		str	r3, [r0, #36]
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return function status */
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 899              		.loc 1 1131 5 is_stmt 1 view .LVU292
 900              		.loc 1 1131 12 is_stmt 0 view .LVU293
 901 0014 0120     		movs	r0, #1
 902              	.LVL47:
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 903              		.loc 1 1133 1 view .LVU294
 904 0016 7047     		bx	lr
 905              	.LVL48:
 906              	.L81:
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 907              		.loc 1 1120 5 is_stmt 1 view .LVU295
 908 0018 0268     		ldr	r2, [r0]
 909 001a 1368     		ldr	r3, [r2]
 910 001c 43F00203 		orr	r3, r3, #2
 911 0020 1360     		str	r3, [r2]
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 912              		.loc 1 1123 5 view .LVU296
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 913              		.loc 1 1123 12 is_stmt 0 view .LVU297
 914 0022 0020     		movs	r0, #0
 915              	.LVL49:
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 916              		.loc 1 1123 12 view .LVU298
 917 0024 7047     		bx	lr
 918              		.cfi_endproc
 919              	.LFE328:
 921              		.section	.text.HAL_CAN_WakeUp,"ax",%progbits
 922              		.align	1
 923              		.global	HAL_CAN_WakeUp
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 41


 924              		.syntax unified
 925              		.thumb
 926              		.thumb_func
 928              	HAL_CAN_WakeUp:
 929              	.LVL50:
 930              	.LFB329:
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Wake up from sleep mode.
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         When returning with HAL_OK status from this function, Sleep mode
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         is exited.
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status.
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_WakeUp(CAN_HandleTypeDef *hcan)
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 931              		.loc 1 1144 1 is_stmt 1 view -0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 8
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935              		@ link register save eliminated.
 936              		.loc 1 1144 1 is_stmt 0 view .LVU300
 937 0000 82B0     		sub	sp, sp, #8
 938              		.cfi_def_cfa_offset 8
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   __IO uint32_t count = 0;
 939              		.loc 1 1145 3 is_stmt 1 view .LVU301
 940              		.loc 1 1145 17 is_stmt 0 view .LVU302
 941 0002 0023     		movs	r3, #0
 942 0004 0193     		str	r3, [sp, #4]
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t timeout = 1000000U;
 943              		.loc 1 1146 3 is_stmt 1 view .LVU303
 944              	.LVL51:
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 945              		.loc 1 1147 3 view .LVU304
 946              		.loc 1 1147 24 is_stmt 0 view .LVU305
 947 0006 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 948              	.LVL52:
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 949              		.loc 1 1149 3 is_stmt 1 view .LVU306
 950              		.loc 1 1149 38 is_stmt 0 view .LVU307
 951 000a 013B     		subs	r3, r3, #1
 952              	.LVL53:
 953              		.loc 1 1149 38 view .LVU308
 954 000c DBB2     		uxtb	r3, r3
 955              		.loc 1 1149 6 view .LVU309
 956 000e 012B     		cmp	r3, #1
 957 0010 18D8     		bhi	.L83
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Wake up request */
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 958              		.loc 1 1153 5 is_stmt 1 view .LVU310
 959 0012 0268     		ldr	r2, [r0]
 960 0014 1368     		ldr	r3, [r2]
 961 0016 23F00203 		bic	r3, r3, #2
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 42


 962 001a 1360     		str	r3, [r2]
 963              	.L86:
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Wait sleep mode is exited */
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     do
 964              		.loc 1 1156 5 view .LVU311
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Increment counter */
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       count++;
 965              		.loc 1 1159 7 view .LVU312
 966              		.loc 1 1159 12 is_stmt 0 view .LVU313
 967 001c 019B     		ldr	r3, [sp, #4]
 968 001e 0133     		adds	r3, r3, #1
 969 0020 0193     		str	r3, [sp, #4]
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Check if timeout is reached */
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if (count > timeout)
 970              		.loc 1 1162 7 is_stmt 1 view .LVU314
 971              		.loc 1 1162 17 is_stmt 0 view .LVU315
 972 0022 019A     		ldr	r2, [sp, #4]
 973              		.loc 1 1162 10 view .LVU316
 974 0024 0B4B     		ldr	r3, .L89
 975 0026 9A42     		cmp	r2, r3
 976 0028 06D8     		bhi	.L88
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Update error code */
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         return HAL_ERROR;
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U);
 977              		.loc 1 1170 49 is_stmt 1 view .LVU317
 978              		.loc 1 1170 17 is_stmt 0 view .LVU318
 979 002a 0368     		ldr	r3, [r0]
 980              		.loc 1 1170 27 view .LVU319
 981 002c 5B68     		ldr	r3, [r3, #4]
 982              		.loc 1 1170 49 view .LVU320
 983 002e 13F0020F 		tst	r3, #2
 984 0032 F3D1     		bne	.L86
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return function status */
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_OK;
 985              		.loc 1 1173 12 view .LVU321
 986 0034 0020     		movs	r0, #0
 987              	.LVL54:
 988              		.loc 1 1173 12 view .LVU322
 989 0036 0AE0     		b	.L85
 990              	.LVL55:
 991              	.L88:
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 992              		.loc 1 1165 9 is_stmt 1 view .LVU323
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 993              		.loc 1 1165 13 is_stmt 0 view .LVU324
 994 0038 436A     		ldr	r3, [r0, #36]
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 995              		.loc 1 1165 25 view .LVU325
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 43


 996 003a 43F40033 		orr	r3, r3, #131072
 997 003e 4362     		str	r3, [r0, #36]
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 998              		.loc 1 1167 9 is_stmt 1 view .LVU326
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 999              		.loc 1 1167 16 is_stmt 0 view .LVU327
 1000 0040 0120     		movs	r0, #1
 1001              	.LVL56:
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 1002              		.loc 1 1167 16 view .LVU328
 1003 0042 04E0     		b	.L85
 1004              	.LVL57:
 1005              	.L83:
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1006              		.loc 1 1178 5 is_stmt 1 view .LVU329
 1007              		.loc 1 1178 9 is_stmt 0 view .LVU330
 1008 0044 436A     		ldr	r3, [r0, #36]
 1009              		.loc 1 1178 21 view .LVU331
 1010 0046 43F48023 		orr	r3, r3, #262144
 1011 004a 4362     		str	r3, [r0, #36]
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 1012              		.loc 1 1180 5 is_stmt 1 view .LVU332
 1013              		.loc 1 1180 12 is_stmt 0 view .LVU333
 1014 004c 0120     		movs	r0, #1
 1015              	.LVL58:
 1016              	.L85:
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 1017              		.loc 1 1182 1 view .LVU334
 1018 004e 02B0     		add	sp, sp, #8
 1019              		.cfi_def_cfa_offset 0
 1020              		@ sp needed
 1021 0050 7047     		bx	lr
 1022              	.L90:
 1023 0052 00BF     		.align	2
 1024              	.L89:
 1025 0054 40420F00 		.word	1000000
 1026              		.cfi_endproc
 1027              	.LFE329:
 1029              		.section	.text.HAL_CAN_IsSleepActive,"ax",%progbits
 1030              		.align	1
 1031              		.global	HAL_CAN_IsSleepActive
 1032              		.syntax unified
 1033              		.thumb
 1034              		.thumb_func
 1036              	HAL_CAN_IsSleepActive:
 1037              	.LVL59:
 1038              	.LFB330:
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Check is sleep mode is active.
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 44


1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval Status
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *          - 0 : Sleep mode is not active.
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *          - 1 : Sleep mode is active.
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** uint32_t HAL_CAN_IsSleepActive(const CAN_HandleTypeDef *hcan)
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 1039              		.loc 1 1193 1 is_stmt 1 view -0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 0
 1042              		@ frame_needed = 0, uses_anonymous_args = 0
 1043              		@ link register save eliminated.
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t status = 0U;
 1044              		.loc 1 1194 3 view .LVU336
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1045              		.loc 1 1195 3 view .LVU337
 1046              		.loc 1 1195 24 is_stmt 0 view .LVU338
 1047 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1048              	.LVL60:
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1049              		.loc 1 1197 3 is_stmt 1 view .LVU339
 1050              		.loc 1 1197 38 is_stmt 0 view .LVU340
 1051 0004 013B     		subs	r3, r3, #1
 1052              	.LVL61:
 1053              		.loc 1 1197 38 view .LVU341
 1054 0006 DBB2     		uxtb	r3, r3
 1055              		.loc 1 1197 6 view .LVU342
 1056 0008 012B     		cmp	r3, #1
 1057 000a 01D9     		bls	.L95
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1058              		.loc 1 1194 12 view .LVU343
 1059 000c 0020     		movs	r0, #0
 1060              	.LVL62:
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1061              		.loc 1 1194 12 view .LVU344
 1062 000e 7047     		bx	lr
 1063              	.LVL63:
 1064              	.L95:
1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check Sleep mode */
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 1065              		.loc 1 1201 5 is_stmt 1 view .LVU345
 1066              		.loc 1 1201 14 is_stmt 0 view .LVU346
 1067 0010 0368     		ldr	r3, [r0]
 1068              		.loc 1 1201 24 view .LVU347
 1069 0012 5868     		ldr	r0, [r3, #4]
 1070              	.LVL64:
 1071              		.loc 1 1201 8 view .LVU348
 1072 0014 10F00200 		ands	r0, r0, #2
 1073 0018 00D1     		bne	.L94
 1074 001a 7047     		bx	lr
 1075              	.L94:
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       status = 1U;
 1076              		.loc 1 1203 14 view .LVU349
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 45


 1077 001c 0120     		movs	r0, #1
 1078              	.LVL65:
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Return function status */
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return status;
 1079              		.loc 1 1208 3 is_stmt 1 view .LVU350
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 1080              		.loc 1 1209 1 is_stmt 0 view .LVU351
 1081 001e 7047     		bx	lr
 1082              		.cfi_endproc
 1083              	.LFE330:
 1085              		.section	.text.HAL_CAN_AddTxMessage,"ax",%progbits
 1086              		.align	1
 1087              		.global	HAL_CAN_AddTxMessage
 1088              		.syntax unified
 1089              		.thumb
 1090              		.thumb_func
 1092              	HAL_CAN_AddTxMessage:
 1093              	.LVL66:
 1094              	.LFB331:
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Add a message to the first free Tx mailbox and activate the
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         corresponding transmission request.
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  pHeader pointer to a CAN_TxHeaderTypeDef structure.
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  aData array containing the payload of the Tx frame.
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  pTxMailbox pointer to a variable where the function will return
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the TxMailbox used to store the Tx message.
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_Tx_Mailboxes.
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AddTxMessage(CAN_HandleTypeDef *hcan, const CAN_TxHeaderTypeDef *pHeader,
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                        const uint8_t aData[], uint32_t *pTxMailbox)
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 1095              		.loc 1 1225 1 is_stmt 1 view -0
 1096              		.cfi_startproc
 1097              		@ args = 0, pretend = 0, frame = 0
 1098              		@ frame_needed = 0, uses_anonymous_args = 0
 1099              		.loc 1 1225 1 is_stmt 0 view .LVU353
 1100 0000 30B5     		push	{r4, r5, lr}
 1101              		.cfi_def_cfa_offset 12
 1102              		.cfi_offset 4, -12
 1103              		.cfi_offset 5, -8
 1104              		.cfi_offset 14, -4
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t transmitmailbox;
 1105              		.loc 1 1226 3 is_stmt 1 view .LVU354
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1106              		.loc 1 1227 3 view .LVU355
 1107              		.loc 1 1227 24 is_stmt 0 view .LVU356
 1108 0002 90F820C0 		ldrb	ip, [r0, #32]	@ zero_extendqisi2
 1109              	.LVL67:
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t tsr = READ_REG(hcan->Instance->TSR);
 1110              		.loc 1 1228 3 is_stmt 1 view .LVU357
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 46


 1111              		.loc 1 1228 12 is_stmt 0 view .LVU358
 1112 0006 0468     		ldr	r4, [r0]
 1113 0008 A468     		ldr	r4, [r4, #8]
 1114              	.LVL68:
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check the parameters */
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(pHeader->IDE));
 1115              		.loc 1 1231 3 is_stmt 1 view .LVU359
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_RTR(pHeader->RTR));
 1116              		.loc 1 1232 3 view .LVU360
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_DLC(pHeader->DLC));
 1117              		.loc 1 1233 3 view .LVU361
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (pHeader->IDE == CAN_ID_STD)
 1118              		.loc 1 1234 3 view .LVU362
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_STDID(pHeader->StdId));
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_EXTID(pHeader->ExtId));
 1119              		.loc 1 1240 5 view .LVU363
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(pHeader->TransmitGlobalTime));
 1120              		.loc 1 1242 3 view .LVU364
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1121              		.loc 1 1244 3 view .LVU365
 1122              		.loc 1 1244 38 is_stmt 0 view .LVU366
 1123 000a 0CF1FF3C 		add	ip, ip, #-1
 1124              	.LVL69:
 1125              		.loc 1 1244 38 view .LVU367
 1126 000e 5FFA8CFC 		uxtb	ip, ip
 1127              		.loc 1 1244 6 view .LVU368
 1128 0012 BCF1010F 		cmp	ip, #1
 1129 0016 62D8     		bhi	.L97
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check that all the Tx mailboxes are not full */
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (((tsr & CAN_TSR_TME0) != 0U) ||
 1130              		.loc 1 1248 5 is_stmt 1 view .LVU369
 1131              		.loc 1 1248 8 is_stmt 0 view .LVU370
 1132 0018 14F0E05F 		tst	r4, #469762048
 1133 001c 59D0     		beq	.L98
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((tsr & CAN_TSR_TME2) != 0U))
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Select an empty transmit mailbox */
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       transmitmailbox = (tsr & CAN_TSR_CODE) >> CAN_TSR_CODE_Pos;
 1134              		.loc 1 1253 7 is_stmt 1 view .LVU371
 1135              		.loc 1 1253 23 is_stmt 0 view .LVU372
 1136 001e C4F3016C 		ubfx	ip, r4, #24, #2
 1137              	.LVL70:
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Store the Tx mailbox */
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       *pTxMailbox = (uint32_t)1 << transmitmailbox;
 1138              		.loc 1 1256 7 is_stmt 1 view .LVU373
 1139              		.loc 1 1256 33 is_stmt 0 view .LVU374
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 47


 1140 0022 0124     		movs	r4, #1
 1141              	.LVL71:
 1142              		.loc 1 1256 33 view .LVU375
 1143 0024 04FA0CF4 		lsl	r4, r4, ip
 1144              		.loc 1 1256 19 view .LVU376
 1145 0028 1C60     		str	r4, [r3]
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Set up the Id */
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if (pHeader->IDE == CAN_ID_STD)
 1146              		.loc 1 1259 7 is_stmt 1 view .LVU377
 1147              		.loc 1 1259 18 is_stmt 0 view .LVU378
 1148 002a 8B68     		ldr	r3, [r1, #8]
 1149              	.LVL72:
 1150              		.loc 1 1259 10 view .LVU379
 1151 002c 002B     		cmp	r3, #0
 1152 002e 3DD1     		bne	.L99
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->StdId << CAN_TI0R_STID_Pos) |
 1153              		.loc 1 1261 9 is_stmt 1 view .LVU380
 1154              		.loc 1 1261 68 is_stmt 0 view .LVU381
 1155 0030 0D68     		ldr	r5, [r1]
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->RTR);
 1156              		.loc 1 1262 67 view .LVU382
 1157 0032 CB68     		ldr	r3, [r1, #12]
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->RTR);
 1158              		.loc 1 1261 13 view .LVU383
 1159 0034 0468     		ldr	r4, [r0]
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->RTR);
 1160              		.loc 1 1261 98 view .LVU384
 1161 0036 43EA4555 		orr	r5, r3, r5, lsl #21
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->RTR);
 1162              		.loc 1 1261 57 view .LVU385
 1163 003a 0CF11803 		add	r3, ip, #24
 1164 003e 1B01     		lsls	r3, r3, #4
 1165 0040 E550     		str	r5, [r4, r3]
 1166              	.L100:
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       else
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->ExtId << CAN_TI0R_EXID_Pos) |
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->IDE |
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->RTR);
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Set up the DLC */
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TDTR = (pHeader->DLC);
 1167              		.loc 1 1272 7 is_stmt 1 view .LVU386
 1168              		.loc 1 1272 11 is_stmt 0 view .LVU387
 1169 0042 0368     		ldr	r3, [r0]
 1170              		.loc 1 1272 66 view .LVU388
 1171 0044 0C69     		ldr	r4, [r1, #16]
 1172              		.loc 1 1272 56 view .LVU389
 1173 0046 0CF1180E 		add	lr, ip, #24
 1174 004a 03EB0E13 		add	r3, r3, lr, lsl #4
 1175 004e 5C60     		str	r4, [r3, #4]
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Set up the Transmit Global Time mode */
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 48


1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if (pHeader->TransmitGlobalTime == ENABLE)
 1176              		.loc 1 1275 7 is_stmt 1 view .LVU390
 1177              		.loc 1 1275 18 is_stmt 0 view .LVU391
 1178 0050 0B7D     		ldrb	r3, [r1, #20]	@ zero_extendqisi2
 1179              		.loc 1 1275 10 view .LVU392
 1180 0052 012B     		cmp	r3, #1
 1181 0054 35D0     		beq	.L104
 1182              	.LVL73:
 1183              	.L101:
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TDTR, CAN_TDT0R_TGT);
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Set up the data field */
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR,
 1184              		.loc 1 1281 7 is_stmt 1 view .LVU393
 1185 0056 D179     		ldrb	r1, [r2, #7]	@ zero_extendqisi2
 1186 0058 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 1187 005a 1B04     		lsls	r3, r3, #16
 1188 005c 43EA0163 		orr	r3, r3, r1, lsl #24
 1189 0060 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 1190 0062 43EA0123 		orr	r3, r3, r1, lsl #8
 1191 0066 1479     		ldrb	r4, [r2, #4]	@ zero_extendqisi2
 1192 0068 0168     		ldr	r1, [r0]
 1193 006a 2343     		orrs	r3, r3, r4
 1194 006c 01EB0C11 		add	r1, r1, ip, lsl #4
 1195 0070 C1F88C31 		str	r3, [r1, #396]
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                 ((uint32_t)aData[7] << CAN_TDH0R_DATA7_Pos) |
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                 ((uint32_t)aData[6] << CAN_TDH0R_DATA6_Pos) |
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                 ((uint32_t)aData[5] << CAN_TDH0R_DATA5_Pos) |
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                 ((uint32_t)aData[4] << CAN_TDH0R_DATA4_Pos));
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR,
 1196              		.loc 1 1286 7 view .LVU394
 1197 0074 D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 1198 0076 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 1199 0078 1B04     		lsls	r3, r3, #16
 1200 007a 43EA0163 		orr	r3, r3, r1, lsl #24
 1201 007e 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 1202 0080 43EA0123 		orr	r3, r3, r1, lsl #8
 1203 0084 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1204 0086 0268     		ldr	r2, [r0]
 1205              	.LVL74:
 1206              		.loc 1 1286 7 is_stmt 0 view .LVU395
 1207 0088 0B43     		orrs	r3, r3, r1
 1208 008a 02EB0C12 		add	r2, r2, ip, lsl #4
 1209 008e C2F88831 		str	r3, [r2, #392]
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                 ((uint32_t)aData[3] << CAN_TDL0R_DATA3_Pos) |
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                 ((uint32_t)aData[2] << CAN_TDL0R_DATA2_Pos) |
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                 ((uint32_t)aData[1] << CAN_TDL0R_DATA1_Pos) |
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                 ((uint32_t)aData[0] << CAN_TDL0R_DATA0_Pos));
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Request transmission */
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TIR, CAN_TI0R_TXRQ);
 1210              		.loc 1 1293 7 is_stmt 1 view .LVU396
 1211 0092 0268     		ldr	r2, [r0]
 1212 0094 0CF1180C 		add	ip, ip, #24
 1213              	.LVL75:
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 49


 1214              		.loc 1 1293 7 is_stmt 0 view .LVU397
 1215 0098 4FEA0C1C 		lsl	ip, ip, #4
 1216 009c 52F80C30 		ldr	r3, [r2, ip]
 1217 00a0 43F00103 		orr	r3, r3, #1
 1218 00a4 42F80C30 		str	r3, [r2, ip]
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Return function status */
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       return HAL_OK;
 1219              		.loc 1 1296 7 is_stmt 1 view .LVU398
 1220              		.loc 1 1296 14 is_stmt 0 view .LVU399
 1221 00a8 0020     		movs	r0, #0
 1222              	.LVL76:
 1223              		.loc 1 1296 14 view .LVU400
 1224 00aa 1DE0     		b	.L102
 1225              	.LVL77:
 1226              	.L99:
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->IDE |
 1227              		.loc 1 1266 9 is_stmt 1 view .LVU401
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->IDE |
 1228              		.loc 1 1266 68 is_stmt 0 view .LVU402
 1229 00ac 4C68     		ldr	r4, [r1, #4]
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->IDE |
 1230              		.loc 1 1266 98 view .LVU403
 1231 00ae 43EAC403 		orr	r3, r3, r4, lsl #3
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 1232              		.loc 1 1268 67 view .LVU404
 1233 00b2 CC68     		ldr	r4, [r1, #12]
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->RTR);
 1234              		.loc 1 1267 73 view .LVU405
 1235 00b4 2343     		orrs	r3, r3, r4
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->IDE |
 1236              		.loc 1 1266 57 view .LVU406
 1237 00b6 0CF11804 		add	r4, ip, #24
 1238 00ba 2401     		lsls	r4, r4, #4
 1239 00bc 0568     		ldr	r5, [r0]
 1240 00be 2B51     		str	r3, [r5, r4]
 1241 00c0 BFE7     		b	.L100
 1242              	.L104:
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 1243              		.loc 1 1277 9 is_stmt 1 view .LVU407
 1244 00c2 0368     		ldr	r3, [r0]
 1245 00c4 03EB0E13 		add	r3, r3, lr, lsl #4
 1246 00c8 5968     		ldr	r1, [r3, #4]
 1247              	.LVL78:
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 1248              		.loc 1 1277 9 is_stmt 0 view .LVU408
 1249 00ca 41F48071 		orr	r1, r1, #256
 1250 00ce 5960     		str	r1, [r3, #4]
 1251 00d0 C1E7     		b	.L101
 1252              	.LVL79:
 1253              	.L98:
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     else
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Update error code */
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1254              		.loc 1 1301 7 is_stmt 1 view .LVU409
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 50


 1255              		.loc 1 1301 11 is_stmt 0 view .LVU410
 1256 00d2 436A     		ldr	r3, [r0, #36]
 1257              	.LVL80:
 1258              		.loc 1 1301 23 view .LVU411
 1259 00d4 43F40013 		orr	r3, r3, #2097152
 1260 00d8 4362     		str	r3, [r0, #36]
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       return HAL_ERROR;
 1261              		.loc 1 1303 7 is_stmt 1 view .LVU412
 1262              		.loc 1 1303 14 is_stmt 0 view .LVU413
 1263 00da 0120     		movs	r0, #1
 1264              	.LVL81:
 1265              		.loc 1 1303 14 view .LVU414
 1266 00dc 04E0     		b	.L102
 1267              	.LVL82:
 1268              	.L97:
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1269              		.loc 1 1309 5 is_stmt 1 view .LVU415
 1270              		.loc 1 1309 9 is_stmt 0 view .LVU416
 1271 00de 436A     		ldr	r3, [r0, #36]
 1272              	.LVL83:
 1273              		.loc 1 1309 21 view .LVU417
 1274 00e0 43F48023 		orr	r3, r3, #262144
 1275 00e4 4362     		str	r3, [r0, #36]
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 1276              		.loc 1 1311 5 is_stmt 1 view .LVU418
 1277              		.loc 1 1311 12 is_stmt 0 view .LVU419
 1278 00e6 0120     		movs	r0, #1
 1279              	.LVL84:
 1280              	.L102:
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 1281              		.loc 1 1313 1 view .LVU420
 1282 00e8 30BD     		pop	{r4, r5, pc}
 1283              		.cfi_endproc
 1284              	.LFE331:
 1286              		.section	.text.HAL_CAN_AbortTxRequest,"ax",%progbits
 1287              		.align	1
 1288              		.global	HAL_CAN_AbortTxRequest
 1289              		.syntax unified
 1290              		.thumb
 1291              		.thumb_func
 1293              	HAL_CAN_AbortTxRequest:
 1294              	.LVL85:
 1295              	.LFB332:
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Abort transmission requests
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  TxMailboxes List of the Tx Mailboxes to abort.
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 51


1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AbortTxRequest(CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 1296              		.loc 1 1324 1 is_stmt 1 view -0
 1297              		.cfi_startproc
 1298              		@ args = 0, pretend = 0, frame = 0
 1299              		@ frame_needed = 0, uses_anonymous_args = 0
 1300              		@ link register save eliminated.
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1301              		.loc 1 1325 3 view .LVU422
 1302              		.loc 1 1325 24 is_stmt 0 view .LVU423
 1303 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1304              	.LVL86:
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check function parameters */
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
 1305              		.loc 1 1328 3 is_stmt 1 view .LVU424
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1306              		.loc 1 1330 3 view .LVU425
 1307              		.loc 1 1330 38 is_stmt 0 view .LVU426
 1308 0004 013B     		subs	r3, r3, #1
 1309              	.LVL87:
 1310              		.loc 1 1330 38 view .LVU427
 1311 0006 DBB2     		uxtb	r3, r3
 1312              		.loc 1 1330 6 view .LVU428
 1313 0008 012B     		cmp	r3, #1
 1314 000a 05D9     		bls	.L111
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check Tx Mailbox 0 */
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX0) != 0U)
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 0 */
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ0);
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check Tx Mailbox 1 */
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX1) != 0U)
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 1 */
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ1);
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check Tx Mailbox 2 */
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX2) != 0U)
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 2 */
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ2);
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return function status */
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_OK;
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 52


1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1315              		.loc 1 1360 5 is_stmt 1 view .LVU429
 1316              		.loc 1 1360 9 is_stmt 0 view .LVU430
 1317 000c 436A     		ldr	r3, [r0, #36]
 1318              		.loc 1 1360 21 view .LVU431
 1319 000e 43F48023 		orr	r3, r3, #262144
 1320 0012 4362     		str	r3, [r0, #36]
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 1321              		.loc 1 1362 5 is_stmt 1 view .LVU432
 1322              		.loc 1 1362 12 is_stmt 0 view .LVU433
 1323 0014 0120     		movs	r0, #1
 1324              	.LVL88:
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 1325              		.loc 1 1364 1 view .LVU434
 1326 0016 7047     		bx	lr
 1327              	.LVL89:
 1328              	.L111:
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1329              		.loc 1 1334 5 is_stmt 1 view .LVU435
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1330              		.loc 1 1334 8 is_stmt 0 view .LVU436
 1331 0018 11F0010F 		tst	r1, #1
 1332 001c 04D0     		beq	.L107
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1333              		.loc 1 1337 7 is_stmt 1 view .LVU437
 1334 001e 0268     		ldr	r2, [r0]
 1335 0020 9368     		ldr	r3, [r2, #8]
 1336 0022 43F08003 		orr	r3, r3, #128
 1337 0026 9360     		str	r3, [r2, #8]
 1338              	.L107:
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1339              		.loc 1 1341 5 view .LVU438
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1340              		.loc 1 1341 8 is_stmt 0 view .LVU439
 1341 0028 11F0020F 		tst	r1, #2
 1342 002c 04D0     		beq	.L108
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1343              		.loc 1 1344 7 is_stmt 1 view .LVU440
 1344 002e 0268     		ldr	r2, [r0]
 1345 0030 9368     		ldr	r3, [r2, #8]
 1346 0032 43F40043 		orr	r3, r3, #32768
 1347 0036 9360     		str	r3, [r2, #8]
 1348              	.L108:
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1349              		.loc 1 1348 5 view .LVU441
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1350              		.loc 1 1348 8 is_stmt 0 view .LVU442
 1351 0038 11F0040F 		tst	r1, #4
 1352 003c 04D0     		beq	.L109
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1353              		.loc 1 1351 7 is_stmt 1 view .LVU443
 1354 003e 0268     		ldr	r2, [r0]
 1355 0040 9368     		ldr	r3, [r2, #8]
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 53


 1356 0042 43F40003 		orr	r3, r3, #8388608
 1357 0046 9360     		str	r3, [r2, #8]
 1358              	.L109:
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1359              		.loc 1 1355 5 view .LVU444
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1360              		.loc 1 1355 12 is_stmt 0 view .LVU445
 1361 0048 0020     		movs	r0, #0
 1362              	.LVL90:
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1363              		.loc 1 1355 12 view .LVU446
 1364 004a 7047     		bx	lr
 1365              		.cfi_endproc
 1366              	.LFE332:
 1368              		.section	.text.HAL_CAN_GetTxMailboxesFreeLevel,"ax",%progbits
 1369              		.align	1
 1370              		.global	HAL_CAN_GetTxMailboxesFreeLevel
 1371              		.syntax unified
 1372              		.thumb
 1373              		.thumb_func
 1375              	HAL_CAN_GetTxMailboxesFreeLevel:
 1376              	.LVL91:
 1377              	.LFB333:
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Return Tx Mailboxes free level: number of free Tx Mailboxes.
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval Number of free Tx Mailboxes.
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** uint32_t HAL_CAN_GetTxMailboxesFreeLevel(const CAN_HandleTypeDef *hcan)
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 1378              		.loc 1 1373 1 is_stmt 1 view -0
 1379              		.cfi_startproc
 1380              		@ args = 0, pretend = 0, frame = 0
 1381              		@ frame_needed = 0, uses_anonymous_args = 0
 1382              		@ link register save eliminated.
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t freelevel = 0U;
 1383              		.loc 1 1374 3 view .LVU448
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1384              		.loc 1 1375 3 view .LVU449
 1385              		.loc 1 1375 24 is_stmt 0 view .LVU450
 1386 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1387              	.LVL92:
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1388              		.loc 1 1377 3 is_stmt 1 view .LVU451
 1389              		.loc 1 1377 38 is_stmt 0 view .LVU452
 1390 0004 013B     		subs	r3, r3, #1
 1391              	.LVL93:
 1392              		.loc 1 1377 38 view .LVU453
 1393 0006 DBB2     		uxtb	r3, r3
 1394              		.loc 1 1377 6 view .LVU454
 1395 0008 012B     		cmp	r3, #1
 1396 000a 01D9     		bls	.L118
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1397              		.loc 1 1374 12 view .LVU455
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 54


 1398 000c 0020     		movs	r0, #0
 1399              	.LVL94:
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check Tx Mailbox 0 status */
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME0) != 0U)
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       freelevel++;
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check Tx Mailbox 1 status */
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME1) != 0U)
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       freelevel++;
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check Tx Mailbox 2 status */
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME2) != 0U)
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       freelevel++;
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Return Tx Mailboxes free level */
1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return freelevel;
 1400              		.loc 1 1400 3 is_stmt 1 view .LVU456
 1401              	.L112:
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 1402              		.loc 1 1401 1 is_stmt 0 view .LVU457
 1403 000e 7047     		bx	lr
 1404              	.LVL95:
 1405              	.L118:
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1406              		.loc 1 1381 5 is_stmt 1 view .LVU458
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1407              		.loc 1 1381 14 is_stmt 0 view .LVU459
 1408 0010 0368     		ldr	r3, [r0]
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1409              		.loc 1 1381 24 view .LVU460
 1410 0012 9868     		ldr	r0, [r3, #8]
 1411              	.LVL96:
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1412              		.loc 1 1381 8 view .LVU461
 1413 0014 10F08060 		ands	r0, r0, #67108864
 1414 0018 00D0     		beq	.L114
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1415              		.loc 1 1383 16 view .LVU462
 1416 001a 0120     		movs	r0, #1
 1417              	.L114:
 1418              	.LVL97:
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1419              		.loc 1 1387 5 is_stmt 1 view .LVU463
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1420              		.loc 1 1387 24 is_stmt 0 view .LVU464
 1421 001c 9A68     		ldr	r2, [r3, #8]
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1422              		.loc 1 1387 8 view .LVU465
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 55


 1423 001e 12F0006F 		tst	r2, #134217728
 1424 0022 00D0     		beq	.L115
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1425              		.loc 1 1389 7 is_stmt 1 view .LVU466
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1426              		.loc 1 1389 16 is_stmt 0 view .LVU467
 1427 0024 0130     		adds	r0, r0, #1
 1428              	.LVL98:
 1429              	.L115:
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1430              		.loc 1 1393 5 is_stmt 1 view .LVU468
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1431              		.loc 1 1393 24 is_stmt 0 view .LVU469
 1432 0026 9B68     		ldr	r3, [r3, #8]
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1433              		.loc 1 1393 8 view .LVU470
 1434 0028 13F0805F 		tst	r3, #268435456
 1435 002c EFD0     		beq	.L112
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1436              		.loc 1 1395 7 is_stmt 1 view .LVU471
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1437              		.loc 1 1395 16 is_stmt 0 view .LVU472
 1438 002e 0130     		adds	r0, r0, #1
 1439              	.LVL99:
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1440              		.loc 1 1395 16 view .LVU473
 1441 0030 7047     		bx	lr
 1442              		.cfi_endproc
 1443              	.LFE333:
 1445              		.section	.text.HAL_CAN_IsTxMessagePending,"ax",%progbits
 1446              		.align	1
 1447              		.global	HAL_CAN_IsTxMessagePending
 1448              		.syntax unified
 1449              		.thumb
 1450              		.thumb_func
 1452              	HAL_CAN_IsTxMessagePending:
 1453              	.LVL100:
 1454              	.LFB334:
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Check if a transmission request is pending on the selected Tx
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         Mailboxes.
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  TxMailboxes List of Tx Mailboxes to check.
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval Status
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *          - 0 : No pending transmission request on any selected Tx Mailboxes.
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *          - 1 : Pending transmission request on at least one of the selected
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *                Tx Mailbox.
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** uint32_t HAL_CAN_IsTxMessagePending(const CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 1455              		.loc 1 1416 1 is_stmt 1 view -0
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 0
 1458              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 56


 1459              		@ link register save eliminated.
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t status = 0U;
 1460              		.loc 1 1417 3 view .LVU475
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1461              		.loc 1 1418 3 view .LVU476
 1462              		.loc 1 1418 24 is_stmt 0 view .LVU477
 1463 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1464              	.LVL101:
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check function parameters */
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
 1465              		.loc 1 1421 3 is_stmt 1 view .LVU478
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1466              		.loc 1 1423 3 view .LVU479
 1467              		.loc 1 1423 38 is_stmt 0 view .LVU480
 1468 0004 013B     		subs	r3, r3, #1
 1469              	.LVL102:
 1470              		.loc 1 1423 38 view .LVU481
 1471 0006 DBB2     		uxtb	r3, r3
 1472              		.loc 1 1423 6 view .LVU482
 1473 0008 012B     		cmp	r3, #1
 1474 000a 01D9     		bls	.L123
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1475              		.loc 1 1417 12 view .LVU483
 1476 000c 0020     		movs	r0, #0
 1477              	.LVL103:
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1478              		.loc 1 1417 12 view .LVU484
 1479 000e 7047     		bx	lr
 1480              	.LVL104:
 1481              	.L123:
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check pending transmission request on the selected Tx Mailboxes */
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((hcan->Instance->TSR & (TxMailboxes << CAN_TSR_TME0_Pos)) != (TxMailboxes << CAN_TSR_TME0_P
 1482              		.loc 1 1427 5 is_stmt 1 view .LVU485
 1483              		.loc 1 1427 14 is_stmt 0 view .LVU486
 1484 0010 0368     		ldr	r3, [r0]
 1485              		.loc 1 1427 24 view .LVU487
 1486 0012 9B68     		ldr	r3, [r3, #8]
 1487              		.loc 1 1427 30 view .LVU488
 1488 0014 03EA8163 		and	r3, r3, r1, lsl #26
 1489              		.loc 1 1427 8 view .LVU489
 1490 0018 B3EB816F 		cmp	r3, r1, lsl #26
 1491 001c 01D0     		beq	.L124
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       status = 1U;
 1492              		.loc 1 1429 14 view .LVU490
 1493 001e 0120     		movs	r0, #1
 1494              	.LVL105:
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Return status */
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return status;
 1495              		.loc 1 1434 3 is_stmt 1 view .LVU491
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 57


1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 1496              		.loc 1 1435 1 is_stmt 0 view .LVU492
 1497 0020 7047     		bx	lr
 1498              	.LVL106:
 1499              	.L124:
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1500              		.loc 1 1417 12 view .LVU493
 1501 0022 0020     		movs	r0, #0
 1502              	.LVL107:
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1503              		.loc 1 1417 12 view .LVU494
 1504 0024 7047     		bx	lr
 1505              		.cfi_endproc
 1506              	.LFE334:
 1508              		.section	.text.HAL_CAN_GetTxTimestamp,"ax",%progbits
 1509              		.align	1
 1510              		.global	HAL_CAN_GetTxTimestamp
 1511              		.syntax unified
 1512              		.thumb
 1513              		.thumb_func
 1515              	HAL_CAN_GetTxTimestamp:
 1516              	.LVL108:
 1517              	.LFB335:
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Return timestamp of Tx message sent, if time triggered communication
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             mode is enabled.
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  TxMailbox Tx Mailbox where the timestamp of message sent will be
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         read.
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         This parameter can be one value of @arg CAN_Tx_Mailboxes.
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval Timestamp of message sent from Tx Mailbox.
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** uint32_t HAL_CAN_GetTxTimestamp(const CAN_HandleTypeDef *hcan, uint32_t TxMailbox)
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 1518              		.loc 1 1448 1 is_stmt 1 view -0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 0
 1521              		@ frame_needed = 0, uses_anonymous_args = 0
 1522              		@ link register save eliminated.
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t timestamp = 0U;
 1523              		.loc 1 1449 3 view .LVU496
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t transmitmailbox;
 1524              		.loc 1 1450 3 view .LVU497
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1525              		.loc 1 1451 3 view .LVU498
 1526              		.loc 1 1451 24 is_stmt 0 view .LVU499
 1527 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1528              	.LVL109:
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check function parameters */
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX(TxMailbox));
 1529              		.loc 1 1454 3 is_stmt 1 view .LVU500
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1530              		.loc 1 1456 3 view .LVU501
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 58


 1531              		.loc 1 1456 38 is_stmt 0 view .LVU502
 1532 0004 013B     		subs	r3, r3, #1
 1533              	.LVL110:
 1534              		.loc 1 1456 38 view .LVU503
 1535 0006 DBB2     		uxtb	r3, r3
 1536              		.loc 1 1456 6 view .LVU504
 1537 0008 012B     		cmp	r3, #1
 1538 000a 01D9     		bls	.L130
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t transmitmailbox;
 1539              		.loc 1 1449 12 view .LVU505
 1540 000c 0020     		movs	r0, #0
 1541              	.LVL111:
1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Select the Tx mailbox */
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     transmitmailbox = POSITION_VAL(TxMailbox);
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Get timestamp */
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     timestamp = (hcan->Instance->sTxMailBox[transmitmailbox].TDTR & CAN_TDT0R_TIME) >> CAN_TDT0R_TI
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Return the timestamp */
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return timestamp;
 1542              		.loc 1 1467 3 is_stmt 1 view .LVU506
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 1543              		.loc 1 1468 1 is_stmt 0 view .LVU507
 1544 000e 7047     		bx	lr
 1545              	.LVL112:
 1546              	.L130:
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 1547              		.loc 1 1460 5 is_stmt 1 view .LVU508
 1548              	.LBB6:
 1549              	.LBI6:
 1550              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 59


  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 60


  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 61


 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 62


 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 63


 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 64


 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 65


 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 66


 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 67


 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 68


 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 69


 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 70


 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 71


 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 72


 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 73


 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 74


 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 75


 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 76


 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 1551              		.loc 2 1048 31 view .LVU509
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 77


 1552              	.LBB7:
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 1553              		.loc 2 1050 3 view .LVU510
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 1554              		.loc 2 1055 4 view .LVU511
 1555              		.syntax unified
 1556              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1557 0010 91FAA1F1 		rbit r1, r1
 1558              	@ 0 "" 2
 1559              	.LVL113:
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 1560              		.loc 2 1068 3 view .LVU512
 1561              		.loc 2 1068 3 is_stmt 0 view .LVU513
 1562              		.thumb
 1563              		.syntax unified
 1564              	.LBE7:
 1565              	.LBE6:
 1566              	.LBB8:
 1567              	.LBI8:
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 1568              		.loc 2 1078 30 is_stmt 1 view .LVU514
 1569              	.LBB9:
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 78


1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 1570              		.loc 2 1089 3 view .LVU515
 1571              		.loc 2 1089 6 is_stmt 0 view .LVU516
 1572 0014 41B1     		cbz	r1, .L129
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 1573              		.loc 2 1093 3 is_stmt 1 view .LVU517
 1574              		.loc 2 1093 10 is_stmt 0 view .LVU518
 1575 0016 B1FA81F1 		clz	r1, r1
 1576              	.LVL114:
 1577              	.L127:
 1578              		.loc 2 1093 10 view .LVU519
 1579              	.LBE9:
 1580              	.LBE8:
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1581              		.loc 1 1463 5 is_stmt 1 view .LVU520
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1582              		.loc 1 1463 22 is_stmt 0 view .LVU521
 1583 001a 0368     		ldr	r3, [r0]
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1584              		.loc 1 1463 61 view .LVU522
 1585 001c 1831     		adds	r1, r1, #24
 1586              	.LVL115:
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1587              		.loc 1 1463 61 view .LVU523
 1588 001e 03EB0113 		add	r3, r3, r1, lsl #4
 1589 0022 5868     		ldr	r0, [r3, #4]
 1590              	.LVL116:
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1591              		.loc 1 1463 85 view .LVU524
 1592 0024 000C     		lsrs	r0, r0, #16
 1593              	.LVL117:
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1594              		.loc 1 1463 85 view .LVU525
 1595 0026 7047     		bx	lr
 1596              	.LVL118:
 1597              	.L129:
 1598              	.LBB11:
 1599              	.LBB10:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1600              		.loc 2 1091 12 view .LVU526
 1601 0028 2021     		movs	r1, #32
 1602              	.LVL119:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1603              		.loc 2 1091 12 view .LVU527
 1604 002a F6E7     		b	.L127
 1605              	.LBE10:
 1606              	.LBE11:
 1607              		.cfi_endproc
 1608              	.LFE335:
 1610              		.section	.text.HAL_CAN_GetRxMessage,"ax",%progbits
 1611              		.align	1
 1612              		.global	HAL_CAN_GetRxMessage
 1613              		.syntax unified
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 79


 1614              		.thumb
 1615              		.thumb_func
 1617              	HAL_CAN_GetRxMessage:
 1618              	.LVL120:
 1619              	.LFB336:
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Get an CAN frame from the Rx FIFO zone into the message RAM.
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  RxFifo Fifo number of the received message to be read.
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  pHeader pointer to a CAN_RxHeaderTypeDef structure where the header
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         of the Rx frame will be stored.
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  aData array where the payload of the Rx frame will be stored.
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_GetRxMessage(CAN_HandleTypeDef *hcan, uint32_t RxFifo,
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                        CAN_RxHeaderTypeDef *pHeader, uint8_t aData[])
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 1620              		.loc 1 1483 1 is_stmt 1 view -0
 1621              		.cfi_startproc
 1622              		@ args = 0, pretend = 0, frame = 0
 1623              		@ frame_needed = 0, uses_anonymous_args = 0
 1624              		@ link register save eliminated.
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1625              		.loc 1 1484 3 view .LVU529
 1626              		.loc 1 1484 24 is_stmt 0 view .LVU530
 1627 0000 90F820C0 		ldrb	ip, [r0, #32]	@ zero_extendqisi2
 1628              	.LVL121:
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
 1629              		.loc 1 1486 3 is_stmt 1 view .LVU531
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1630              		.loc 1 1488 3 view .LVU532
 1631              		.loc 1 1488 38 is_stmt 0 view .LVU533
 1632 0004 0CF1FF3C 		add	ip, ip, #-1
 1633              	.LVL122:
 1634              		.loc 1 1488 38 view .LVU534
 1635 0008 5FFA8CFC 		uxtb	ip, ip
 1636              		.loc 1 1488 6 view .LVU535
 1637 000c BCF1010F 		cmp	ip, #1
 1638 0010 00F29580 		bhi	.L132
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1639              		.loc 1 1483 1 view .LVU536
 1640 0014 30B4     		push	{r4, r5}
 1641              		.cfi_def_cfa_offset 8
 1642              		.cfi_offset 4, -8
 1643              		.cfi_offset 5, -4
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check the Rx FIFO */
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 1644              		.loc 1 1492 5 is_stmt 1 view .LVU537
 1645              		.loc 1 1492 8 is_stmt 0 view .LVU538
 1646 0016 51B9     		cbnz	r1, .L133
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 80


1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Check that the Rx FIFO 0 is not empty */
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) == 0U)
 1647              		.loc 1 1495 7 is_stmt 1 view .LVU539
 1648              		.loc 1 1495 16 is_stmt 0 view .LVU540
 1649 0018 0468     		ldr	r4, [r0]
 1650              		.loc 1 1495 26 view .LVU541
 1651 001a E468     		ldr	r4, [r4, #12]
 1652              		.loc 1 1495 10 view .LVU542
 1653 001c 14F0030F 		tst	r4, #3
 1654 0020 10D1     		bne	.L134
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Update error code */
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1655              		.loc 1 1498 9 is_stmt 1 view .LVU543
 1656              		.loc 1 1498 13 is_stmt 0 view .LVU544
 1657 0022 436A     		ldr	r3, [r0, #36]
 1658              	.LVL123:
 1659              		.loc 1 1498 25 view .LVU545
 1660 0024 43F40013 		orr	r3, r3, #2097152
 1661 0028 4362     		str	r3, [r0, #36]
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         return HAL_ERROR;
 1662              		.loc 1 1500 9 is_stmt 1 view .LVU546
 1663              		.loc 1 1500 16 is_stmt 0 view .LVU547
 1664 002a 0120     		movs	r0, #1
 1665              	.LVL124:
 1666              		.loc 1 1500 16 view .LVU548
 1667 002c 77E0     		b	.L135
 1668              	.LVL125:
 1669              	.L133:
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Check that the Rx FIFO 1 is not empty */
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) == 0U)
 1670              		.loc 1 1506 7 is_stmt 1 view .LVU549
 1671              		.loc 1 1506 16 is_stmt 0 view .LVU550
 1672 002e 0468     		ldr	r4, [r0]
 1673              		.loc 1 1506 26 view .LVU551
 1674 0030 2469     		ldr	r4, [r4, #16]
 1675              		.loc 1 1506 10 view .LVU552
 1676 0032 14F0030F 		tst	r4, #3
 1677 0036 05D1     		bne	.L134
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Update error code */
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1678              		.loc 1 1509 9 is_stmt 1 view .LVU553
 1679              		.loc 1 1509 13 is_stmt 0 view .LVU554
 1680 0038 436A     		ldr	r3, [r0, #36]
 1681              	.LVL126:
 1682              		.loc 1 1509 25 view .LVU555
 1683 003a 43F40013 		orr	r3, r3, #2097152
 1684 003e 4362     		str	r3, [r0, #36]
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         return HAL_ERROR;
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 81


 1685              		.loc 1 1511 9 is_stmt 1 view .LVU556
 1686              		.loc 1 1511 16 is_stmt 0 view .LVU557
 1687 0040 0120     		movs	r0, #1
 1688              	.LVL127:
 1689              		.loc 1 1511 16 view .LVU558
 1690 0042 6CE0     		b	.L135
 1691              	.LVL128:
 1692              	.L134:
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Get the header */
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     pHeader->IDE = CAN_RI0R_IDE & hcan->Instance->sFIFOMailBox[RxFifo].RIR;
 1693              		.loc 1 1516 5 is_stmt 1 view .LVU559
 1694              		.loc 1 1516 71 is_stmt 0 view .LVU560
 1695 0044 01F11B04 		add	r4, r1, #27
 1696 0048 2401     		lsls	r4, r4, #4
 1697 004a 0568     		ldr	r5, [r0]
 1698 004c 2C59     		ldr	r4, [r5, r4]
 1699              		.loc 1 1516 33 view .LVU561
 1700 004e 04F00404 		and	r4, r4, #4
 1701              		.loc 1 1516 18 view .LVU562
 1702 0052 9460     		str	r4, [r2, #8]
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
 1703              		.loc 1 1517 5 is_stmt 1 view .LVU563
 1704              		.loc 1 1517 8 is_stmt 0 view .LVU564
 1705 0054 002C     		cmp	r4, #0
 1706 0056 64D1     		bne	.L136
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       pHeader->StdId = (CAN_RI0R_STID & hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_TI0R_STID_
 1707              		.loc 1 1519 7 is_stmt 1 view .LVU565
 1708              		.loc 1 1519 77 is_stmt 0 view .LVU566
 1709 0058 01F11B04 		add	r4, r1, #27
 1710 005c 2401     		lsls	r4, r4, #4
 1711 005e 0568     		ldr	r5, [r0]
 1712 0060 2C59     		ldr	r4, [r5, r4]
 1713              		.loc 1 1519 83 view .LVU567
 1714 0062 640D     		lsrs	r4, r4, #21
 1715              		.loc 1 1519 22 view .LVU568
 1716 0064 1460     		str	r4, [r2]
 1717              	.L137:
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     else
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       pHeader->ExtId = ((CAN_RI0R_EXID | CAN_RI0R_STID) &
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     pHeader->RTR = (CAN_RI0R_RTR & hcan->Instance->sFIFOMailBox[RxFifo].RIR);
 1718              		.loc 1 1526 5 is_stmt 1 view .LVU569
 1719              		.loc 1 1526 40 is_stmt 0 view .LVU570
 1720 0066 0468     		ldr	r4, [r0]
 1721              		.loc 1 1526 72 view .LVU571
 1722 0068 01F11B0C 		add	ip, r1, #27
 1723 006c 4FEA0C1C 		lsl	ip, ip, #4
 1724 0070 54F80C40 		ldr	r4, [r4, ip]
 1725              		.loc 1 1526 34 view .LVU572
 1726 0074 04F00204 		and	r4, r4, #2
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 82


 1727              		.loc 1 1526 18 view .LVU573
 1728 0078 D460     		str	r4, [r2, #12]
1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     pHeader->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos
 1729              		.loc 1 1527 5 is_stmt 1 view .LVU574
 1730              		.loc 1 1527 41 is_stmt 0 view .LVU575
 1731 007a 0468     		ldr	r4, [r0]
 1732              		.loc 1 1527 73 view .LVU576
 1733 007c 6444     		add	r4, r4, ip
 1734 007e 6468     		ldr	r4, [r4, #4]
 1735              		.loc 1 1527 80 view .LVU577
 1736 0080 04F00F04 		and	r4, r4, #15
 1737              		.loc 1 1527 18 view .LVU578
 1738 0084 1461     		str	r4, [r2, #16]
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_
 1739              		.loc 1 1528 5 is_stmt 1 view .LVU579
 1740              		.loc 1 1528 54 is_stmt 0 view .LVU580
 1741 0086 0468     		ldr	r4, [r0]
 1742              		.loc 1 1528 86 view .LVU581
 1743 0088 6444     		add	r4, r4, ip
 1744 008a 6468     		ldr	r4, [r4, #4]
 1745              		.loc 1 1528 93 view .LVU582
 1746 008c C4F30724 		ubfx	r4, r4, #8, #8
 1747              		.loc 1 1528 31 view .LVU583
 1748 0090 9461     		str	r4, [r2, #24]
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 1749              		.loc 1 1529 5 is_stmt 1 view .LVU584
 1750              		.loc 1 1529 48 is_stmt 0 view .LVU585
 1751 0092 0468     		ldr	r4, [r0]
 1752              		.loc 1 1529 80 view .LVU586
 1753 0094 6444     		add	r4, r4, ip
 1754 0096 6468     		ldr	r4, [r4, #4]
 1755              		.loc 1 1529 87 view .LVU587
 1756 0098 240C     		lsrs	r4, r4, #16
 1757              		.loc 1 1529 24 view .LVU588
 1758 009a 5461     		str	r4, [r2, #20]
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Get the data */
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     aData[0] = (uint8_t)((CAN_RDL0R_DATA0 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1759              		.loc 1 1532 5 is_stmt 1 view .LVU589
 1760              		.loc 1 1532 49 is_stmt 0 view .LVU590
 1761 009c 0268     		ldr	r2, [r0]
 1762              	.LVL129:
 1763              		.loc 1 1532 81 view .LVU591
 1764 009e 02EB0112 		add	r2, r2, r1, lsl #4
 1765 00a2 D2F8B821 		ldr	r2, [r2, #440]
 1766              		.loc 1 1532 14 view .LVU592
 1767 00a6 1A70     		strb	r2, [r3]
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1768              		.loc 1 1533 5 is_stmt 1 view .LVU593
 1769              		.loc 1 1533 49 is_stmt 0 view .LVU594
 1770 00a8 0268     		ldr	r2, [r0]
 1771              		.loc 1 1533 81 view .LVU595
 1772 00aa 02EB0112 		add	r2, r2, r1, lsl #4
 1773 00ae D2F8B821 		ldr	r2, [r2, #440]
 1774              		.loc 1 1533 16 view .LVU596
 1775 00b2 C2F30722 		ubfx	r2, r2, #8, #8
 1776              		.loc 1 1533 14 view .LVU597
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 83


 1777 00b6 5A70     		strb	r2, [r3, #1]
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1778              		.loc 1 1534 5 is_stmt 1 view .LVU598
 1779              		.loc 1 1534 49 is_stmt 0 view .LVU599
 1780 00b8 0268     		ldr	r2, [r0]
 1781              		.loc 1 1534 81 view .LVU600
 1782 00ba 02EB0112 		add	r2, r2, r1, lsl #4
 1783 00be D2F8B821 		ldr	r2, [r2, #440]
 1784              		.loc 1 1534 16 view .LVU601
 1785 00c2 C2F30742 		ubfx	r2, r2, #16, #8
 1786              		.loc 1 1534 14 view .LVU602
 1787 00c6 9A70     		strb	r2, [r3, #2]
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1788              		.loc 1 1535 5 is_stmt 1 view .LVU603
 1789              		.loc 1 1535 49 is_stmt 0 view .LVU604
 1790 00c8 0268     		ldr	r2, [r0]
 1791              		.loc 1 1535 81 view .LVU605
 1792 00ca 02EB0112 		add	r2, r2, r1, lsl #4
 1793 00ce D2F8B821 		ldr	r2, [r2, #440]
 1794              		.loc 1 1535 16 view .LVU606
 1795 00d2 120E     		lsrs	r2, r2, #24
 1796              		.loc 1 1535 14 view .LVU607
 1797 00d4 DA70     		strb	r2, [r3, #3]
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1798              		.loc 1 1536 5 is_stmt 1 view .LVU608
 1799              		.loc 1 1536 49 is_stmt 0 view .LVU609
 1800 00d6 0268     		ldr	r2, [r0]
 1801              		.loc 1 1536 81 view .LVU610
 1802 00d8 02EB0112 		add	r2, r2, r1, lsl #4
 1803 00dc D2F8BC21 		ldr	r2, [r2, #444]
 1804              		.loc 1 1536 14 view .LVU611
 1805 00e0 1A71     		strb	r2, [r3, #4]
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1806              		.loc 1 1537 5 is_stmt 1 view .LVU612
 1807              		.loc 1 1537 49 is_stmt 0 view .LVU613
 1808 00e2 0268     		ldr	r2, [r0]
 1809              		.loc 1 1537 81 view .LVU614
 1810 00e4 02EB0112 		add	r2, r2, r1, lsl #4
 1811 00e8 D2F8BC21 		ldr	r2, [r2, #444]
 1812              		.loc 1 1537 16 view .LVU615
 1813 00ec C2F30722 		ubfx	r2, r2, #8, #8
 1814              		.loc 1 1537 14 view .LVU616
 1815 00f0 5A71     		strb	r2, [r3, #5]
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1816              		.loc 1 1538 5 is_stmt 1 view .LVU617
 1817              		.loc 1 1538 49 is_stmt 0 view .LVU618
 1818 00f2 0268     		ldr	r2, [r0]
 1819              		.loc 1 1538 81 view .LVU619
 1820 00f4 02EB0112 		add	r2, r2, r1, lsl #4
 1821 00f8 D2F8BC21 		ldr	r2, [r2, #444]
 1822              		.loc 1 1538 16 view .LVU620
 1823 00fc C2F30742 		ubfx	r2, r2, #16, #8
 1824              		.loc 1 1538 14 view .LVU621
 1825 0100 9A71     		strb	r2, [r3, #6]
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1826              		.loc 1 1539 5 is_stmt 1 view .LVU622
 1827              		.loc 1 1539 49 is_stmt 0 view .LVU623
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 84


 1828 0102 0268     		ldr	r2, [r0]
 1829              		.loc 1 1539 81 view .LVU624
 1830 0104 02EB0112 		add	r2, r2, r1, lsl #4
 1831 0108 D2F8BC21 		ldr	r2, [r2, #444]
 1832              		.loc 1 1539 16 view .LVU625
 1833 010c 120E     		lsrs	r2, r2, #24
 1834              		.loc 1 1539 14 view .LVU626
 1835 010e DA71     		strb	r2, [r3, #7]
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Release the FIFO */
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 1836              		.loc 1 1542 5 is_stmt 1 view .LVU627
 1837              		.loc 1 1542 8 is_stmt 0 view .LVU628
 1838 0110 79B9     		cbnz	r1, .L138
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Release RX FIFO 0 */
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       SET_BIT(hcan->Instance->RF0R, CAN_RF0R_RFOM0);
 1839              		.loc 1 1545 7 is_stmt 1 view .LVU629
 1840 0112 0268     		ldr	r2, [r0]
 1841 0114 D368     		ldr	r3, [r2, #12]
 1842              	.LVL130:
 1843              		.loc 1 1545 7 is_stmt 0 view .LVU630
 1844 0116 43F02003 		orr	r3, r3, #32
 1845 011a D360     		str	r3, [r2, #12]
 1846              	.L139:
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Release RX FIFO 1 */
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       SET_BIT(hcan->Instance->RF1R, CAN_RF1R_RFOM1);
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return function status */
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_OK;
 1847              		.loc 1 1554 5 is_stmt 1 view .LVU631
 1848              		.loc 1 1554 12 is_stmt 0 view .LVU632
 1849 011c 0020     		movs	r0, #0
 1850              	.LVL131:
 1851              	.L135:
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 1852              		.loc 1 1563 1 view .LVU633
 1853 011e 30BC     		pop	{r4, r5}
 1854              		.cfi_remember_state
 1855              		.cfi_restore 5
 1856              		.cfi_restore 4
 1857              		.cfi_def_cfa_offset 0
 1858 0120 7047     		bx	lr
 1859              	.LVL132:
 1860              	.L136:
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 85


 1861              		.cfi_restore_state
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
 1862              		.loc 1 1523 7 is_stmt 1 view .LVU634
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1863              		.loc 1 1524 61 is_stmt 0 view .LVU635
 1864 0122 01F11B04 		add	r4, r1, #27
 1865 0126 2401     		lsls	r4, r4, #4
 1866 0128 0568     		ldr	r5, [r0]
 1867 012a 2C59     		ldr	r4, [r5, r4]
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1868              		.loc 1 1524 67 view .LVU636
 1869 012c E408     		lsrs	r4, r4, #3
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
 1870              		.loc 1 1523 22 view .LVU637
 1871 012e 5460     		str	r4, [r2, #4]
 1872 0130 99E7     		b	.L137
 1873              	.LVL133:
 1874              	.L138:
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1875              		.loc 1 1550 7 is_stmt 1 view .LVU638
 1876 0132 0268     		ldr	r2, [r0]
 1877 0134 1369     		ldr	r3, [r2, #16]
 1878              	.LVL134:
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1879              		.loc 1 1550 7 is_stmt 0 view .LVU639
 1880 0136 43F02003 		orr	r3, r3, #32
 1881 013a 1361     		str	r3, [r2, #16]
 1882 013c EEE7     		b	.L139
 1883              	.LVL135:
 1884              	.L132:
 1885              		.cfi_def_cfa_offset 0
 1886              		.cfi_restore 4
 1887              		.cfi_restore 5
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 1888              		.loc 1 1559 5 is_stmt 1 view .LVU640
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 1889              		.loc 1 1559 9 is_stmt 0 view .LVU641
 1890 013e 436A     		ldr	r3, [r0, #36]
 1891              	.LVL136:
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 1892              		.loc 1 1559 21 view .LVU642
 1893 0140 43F48023 		orr	r3, r3, #262144
 1894 0144 4362     		str	r3, [r0, #36]
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1895              		.loc 1 1561 5 is_stmt 1 view .LVU643
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1896              		.loc 1 1561 12 is_stmt 0 view .LVU644
 1897 0146 0120     		movs	r0, #1
 1898              	.LVL137:
 1899              		.loc 1 1563 1 view .LVU645
 1900 0148 7047     		bx	lr
 1901              		.cfi_endproc
 1902              	.LFE336:
 1904              		.section	.text.HAL_CAN_GetRxFifoFillLevel,"ax",%progbits
 1905              		.align	1
 1906              		.global	HAL_CAN_GetRxFifoFillLevel
 1907              		.syntax unified
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 86


 1908              		.thumb
 1909              		.thumb_func
 1911              	HAL_CAN_GetRxFifoFillLevel:
 1912              	.LVL138:
 1913              	.LFB337:
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Return Rx FIFO fill level.
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  RxFifo Rx FIFO.
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval Number of messages available in Rx FIFO.
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** uint32_t HAL_CAN_GetRxFifoFillLevel(const CAN_HandleTypeDef *hcan, uint32_t RxFifo)
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 1914              		.loc 1 1574 1 is_stmt 1 view -0
 1915              		.cfi_startproc
 1916              		@ args = 0, pretend = 0, frame = 0
 1917              		@ frame_needed = 0, uses_anonymous_args = 0
 1918              		@ link register save eliminated.
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t filllevel = 0U;
 1919              		.loc 1 1575 3 view .LVU647
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1920              		.loc 1 1576 3 view .LVU648
 1921              		.loc 1 1576 24 is_stmt 0 view .LVU649
 1922 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1923              	.LVL139:
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check function parameters */
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
 1924              		.loc 1 1579 3 is_stmt 1 view .LVU650
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1925              		.loc 1 1581 3 view .LVU651
 1926              		.loc 1 1581 38 is_stmt 0 view .LVU652
 1927 0004 013B     		subs	r3, r3, #1
 1928              	.LVL140:
 1929              		.loc 1 1581 38 view .LVU653
 1930 0006 DBB2     		uxtb	r3, r3
 1931              		.loc 1 1581 6 view .LVU654
 1932 0008 012B     		cmp	r3, #1
 1933 000a 01D9     		bls	.L148
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1934              		.loc 1 1575 12 view .LVU655
 1935 000c 0020     		movs	r0, #0
 1936              	.LVL141:
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0)
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       filllevel = hcan->Instance->RF0R & CAN_RF0R_FMP0;
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     else /* RxFifo == CAN_RX_FIFO1 */
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       filllevel = hcan->Instance->RF1R & CAN_RF1R_FMP1;
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 87


1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Return Rx FIFO fill level */
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return filllevel;
 1937              		.loc 1 1595 3 is_stmt 1 view .LVU656
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 1938              		.loc 1 1596 1 is_stmt 0 view .LVU657
 1939 000e 7047     		bx	lr
 1940              	.LVL142:
 1941              	.L148:
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1942              		.loc 1 1584 5 is_stmt 1 view .LVU658
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1943              		.loc 1 1584 8 is_stmt 0 view .LVU659
 1944 0010 21B9     		cbnz	r1, .L146
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1945              		.loc 1 1586 7 is_stmt 1 view .LVU660
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1946              		.loc 1 1586 23 is_stmt 0 view .LVU661
 1947 0012 0368     		ldr	r3, [r0]
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1948              		.loc 1 1586 33 view .LVU662
 1949 0014 D868     		ldr	r0, [r3, #12]
 1950              	.LVL143:
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1951              		.loc 1 1586 17 view .LVU663
 1952 0016 00F00300 		and	r0, r0, #3
 1953              	.LVL144:
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1954              		.loc 1 1586 17 view .LVU664
 1955 001a 7047     		bx	lr
 1956              	.LVL145:
 1957              	.L146:
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1958              		.loc 1 1590 7 is_stmt 1 view .LVU665
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1959              		.loc 1 1590 23 is_stmt 0 view .LVU666
 1960 001c 0368     		ldr	r3, [r0]
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1961              		.loc 1 1590 33 view .LVU667
 1962 001e 1869     		ldr	r0, [r3, #16]
 1963              	.LVL146:
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1964              		.loc 1 1590 17 view .LVU668
 1965 0020 00F00300 		and	r0, r0, #3
 1966              	.LVL147:
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1967              		.loc 1 1590 17 view .LVU669
 1968 0024 7047     		bx	lr
 1969              		.cfi_endproc
 1970              	.LFE337:
 1972              		.section	.text.HAL_CAN_ActivateNotification,"ax",%progbits
 1973              		.align	1
 1974              		.global	HAL_CAN_ActivateNotification
 1975              		.syntax unified
 1976              		.thumb
 1977              		.thumb_func
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 88


 1979              	HAL_CAN_ActivateNotification:
 1980              	.LVL148:
 1981              	.LFB338:
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @}
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group4 Interrupts management
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****  *  @brief    Interrupts management
1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****  *
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @verbatim
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                        ##### Interrupts management #####
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     [..]  This section provides functions allowing to:
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_ActivateNotification      : Enable interrupts
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_DeactivateNotification    : Disable interrupts
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_IRQHandler                : Handles CAN interrupt request
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @endverbatim
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @{
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Enable interrupts.
1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  ActiveITs indicates which interrupts will be enabled.
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ActivateNotification(CAN_HandleTypeDef *hcan, uint32_t ActiveITs)
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 1982              		.loc 1 1627 1 is_stmt 1 view -0
 1983              		.cfi_startproc
 1984              		@ args = 0, pretend = 0, frame = 0
 1985              		@ frame_needed = 0, uses_anonymous_args = 0
 1986              		@ link register save eliminated.
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1987              		.loc 1 1628 3 view .LVU671
 1988              		.loc 1 1628 24 is_stmt 0 view .LVU672
 1989 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1990              	.LVL149:
1629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check function parameters */
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_IT(ActiveITs));
 1991              		.loc 1 1631 3 is_stmt 1 view .LVU673
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1992              		.loc 1 1633 3 view .LVU674
 1993              		.loc 1 1633 38 is_stmt 0 view .LVU675
 1994 0004 013B     		subs	r3, r3, #1
 1995              	.LVL150:
 1996              		.loc 1 1633 38 view .LVU676
 1997 0006 DBB2     		uxtb	r3, r3
 1998              		.loc 1 1633 6 view .LVU677
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 89


 1999 0008 012B     		cmp	r3, #1
 2000 000a 05D9     		bls	.L152
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Enable the selected interrupts */
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, ActiveITs);
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return function status */
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_OK;
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2001              		.loc 1 1645 5 is_stmt 1 view .LVU678
 2002              		.loc 1 1645 9 is_stmt 0 view .LVU679
 2003 000c 436A     		ldr	r3, [r0, #36]
 2004              		.loc 1 1645 21 view .LVU680
 2005 000e 43F48023 		orr	r3, r3, #262144
 2006 0012 4362     		str	r3, [r0, #36]
1646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 2007              		.loc 1 1647 5 is_stmt 1 view .LVU681
 2008              		.loc 1 1647 12 is_stmt 0 view .LVU682
 2009 0014 0120     		movs	r0, #1
 2010              	.LVL151:
1648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2011              		.loc 1 1649 1 view .LVU683
 2012 0016 7047     		bx	lr
 2013              	.LVL152:
 2014              	.L152:
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2015              		.loc 1 1637 5 is_stmt 1 view .LVU684
 2016 0018 0268     		ldr	r2, [r0]
 2017 001a 5369     		ldr	r3, [r2, #20]
 2018 001c 0B43     		orrs	r3, r3, r1
 2019 001e 5361     		str	r3, [r2, #20]
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 2020              		.loc 1 1640 5 view .LVU685
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 2021              		.loc 1 1640 12 is_stmt 0 view .LVU686
 2022 0020 0020     		movs	r0, #0
 2023              	.LVL153:
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 2024              		.loc 1 1640 12 view .LVU687
 2025 0022 7047     		bx	lr
 2026              		.cfi_endproc
 2027              	.LFE338:
 2029              		.section	.text.HAL_CAN_DeactivateNotification,"ax",%progbits
 2030              		.align	1
 2031              		.global	HAL_CAN_DeactivateNotification
 2032              		.syntax unified
 2033              		.thumb
 2034              		.thumb_func
 2036              	HAL_CAN_DeactivateNotification:
 2037              	.LVL154:
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 90


 2038              	.LFB339:
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Disable interrupts.
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  InactiveITs indicates which interrupts will be disabled.
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeactivateNotification(CAN_HandleTypeDef *hcan, uint32_t InactiveITs)
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2039              		.loc 1 1660 1 is_stmt 1 view -0
 2040              		.cfi_startproc
 2041              		@ args = 0, pretend = 0, frame = 0
 2042              		@ frame_needed = 0, uses_anonymous_args = 0
 2043              		@ link register save eliminated.
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2044              		.loc 1 1661 3 view .LVU689
 2045              		.loc 1 1661 24 is_stmt 0 view .LVU690
 2046 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2047              	.LVL155:
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check function parameters */
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_IT(InactiveITs));
 2048              		.loc 1 1664 3 is_stmt 1 view .LVU691
1665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2049              		.loc 1 1666 3 view .LVU692
 2050              		.loc 1 1666 38 is_stmt 0 view .LVU693
 2051 0004 013B     		subs	r3, r3, #1
 2052              	.LVL156:
 2053              		.loc 1 1666 38 view .LVU694
 2054 0006 DBB2     		uxtb	r3, r3
 2055              		.loc 1 1666 6 view .LVU695
 2056 0008 012B     		cmp	r3, #1
 2057 000a 05D9     		bls	.L156
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Disable the selected interrupts */
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, InactiveITs);
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return function status */
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_OK;
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2058              		.loc 1 1678 5 is_stmt 1 view .LVU696
 2059              		.loc 1 1678 9 is_stmt 0 view .LVU697
 2060 000c 436A     		ldr	r3, [r0, #36]
 2061              		.loc 1 1678 21 view .LVU698
 2062 000e 43F48023 		orr	r3, r3, #262144
 2063 0012 4362     		str	r3, [r0, #36]
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 91


 2064              		.loc 1 1680 5 is_stmt 1 view .LVU699
 2065              		.loc 1 1680 12 is_stmt 0 view .LVU700
 2066 0014 0120     		movs	r0, #1
 2067              	.LVL157:
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2068              		.loc 1 1682 1 view .LVU701
 2069 0016 7047     		bx	lr
 2070              	.LVL158:
 2071              	.L156:
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2072              		.loc 1 1670 5 is_stmt 1 view .LVU702
 2073 0018 0268     		ldr	r2, [r0]
 2074 001a 5369     		ldr	r3, [r2, #20]
 2075 001c 23EA0103 		bic	r3, r3, r1
 2076 0020 5361     		str	r3, [r2, #20]
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 2077              		.loc 1 1673 5 view .LVU703
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 2078              		.loc 1 1673 12 is_stmt 0 view .LVU704
 2079 0022 0020     		movs	r0, #0
 2080              	.LVL159:
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 2081              		.loc 1 1673 12 view .LVU705
 2082 0024 7047     		bx	lr
 2083              		.cfi_endproc
 2084              	.LFE339:
 2086              		.section	.text.HAL_CAN_TxMailbox0CompleteCallback,"ax",%progbits
 2087              		.align	1
 2088              		.weak	HAL_CAN_TxMailbox0CompleteCallback
 2089              		.syntax unified
 2090              		.thumb
 2091              		.thumb_func
 2093              	HAL_CAN_TxMailbox0CompleteCallback:
 2094              	.LVL160:
 2095              	.LFB341:
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Handles CAN interrupt request
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** void HAL_CAN_IRQHandler(CAN_HandleTypeDef *hcan)
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Transmit Mailbox empty interrupt management *****************************/
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((interrupts & CAN_IT_TX_MAILBOX_EMPTY) != 0U)
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Transmit Mailbox 0 management *****************************************/
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 92


1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP0) != 0U)
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK0,ALST0,TERR0 bits) */
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP0);
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK0) != 0U)
1710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Transmission Mailbox 0 complete callback */
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Call registered callback*/
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback(hcan);
1715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Call weak (surcharged) callback */
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         HAL_CAN_TxMailbox0CompleteCallback(hcan);
1718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       else
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST0) != 0U)
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Update error code */
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST0;
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR0) != 0U)
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Update error code */
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR0;
1731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         else
1733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Transmission Mailbox 0 abort callback */
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Call registered callback*/
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           hcan->TxMailbox0AbortCallback(hcan);
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Call weak (surcharged) callback */
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_TxMailbox0AbortCallback(hcan);
1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Transmit Mailbox 1 management *****************************************/
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP1) != 0U)
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK1,ALST1,TERR1 bits) */
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP1);
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK1) != 0U)
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Transmission Mailbox 1 complete callback */
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Call registered callback*/
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback(hcan);
1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Call weak (surcharged) callback */
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         HAL_CAN_TxMailbox1CompleteCallback(hcan);
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 93


1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       else
1764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST1) != 0U)
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Update error code */
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST1;
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR1) != 0U)
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Update error code */
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR1;
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         else
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Transmission Mailbox 1 abort callback */
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Call registered callback*/
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           hcan->TxMailbox1AbortCallback(hcan);
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Call weak (surcharged) callback */
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_TxMailbox1AbortCallback(hcan);
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Transmit Mailbox 2 management *****************************************/
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP2) != 0U)
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK2,ALST2,TERR2 bits) */
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP2);
1794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK2) != 0U)
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Transmission Mailbox 2 complete callback */
1798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Call registered callback*/
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback(hcan);
1801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Call weak (surcharged) callback */
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         HAL_CAN_TxMailbox2CompleteCallback(hcan);
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       else
1807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST2) != 0U)
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Update error code */
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST2;
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR2) != 0U)
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Update error code */
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR2;
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 94


1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         else
1819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Transmission Mailbox 2 abort callback */
1821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Call registered callback*/
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           hcan->TxMailbox2AbortCallback(hcan);
1824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Call weak (surcharged) callback */
1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_TxMailbox2AbortCallback(hcan);
1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Receive FIFO 0 overrun interrupt management *****************************/
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_OVERRUN) != 0U)
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FOVR0) != 0U)
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 0 overrun error */
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV0;
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Clear FIFO0 Overrun Flag */
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Receive FIFO 0 full interrupt management ********************************/
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_FULL) != 0U)
1848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FULL0) != 0U)
1850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Clear FIFO 0 full Flag */
1852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF0);
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Receive FIFO 0 full Callback */
1855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call registered callback*/
1857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->RxFifo0FullCallback(hcan);
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       HAL_CAN_RxFifo0FullCallback(hcan);
1861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Receive FIFO 0 message pending interrupt management *********************/
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_MSG_PENDING) != 0U)
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check if message is still pending */
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) != 0U)
1870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Receive FIFO 0 message pending Callback */
1872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call registered callback*/
1874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->RxFifo0MsgPendingCallback(hcan);
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 95


1875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       HAL_CAN_RxFifo0MsgPendingCallback(hcan);
1878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Receive FIFO 1 overrun interrupt management *****************************/
1883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_OVERRUN) != 0U)
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FOVR1) != 0U)
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 1 overrun error */
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV1;
1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Clear FIFO1 Overrun Flag */
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
1892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Receive FIFO 1 full interrupt management ********************************/
1896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_FULL) != 0U)
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FULL1) != 0U)
1899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Clear FIFO 1 full Flag */
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF1);
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Receive FIFO 1 full Callback */
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call registered callback*/
1906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->RxFifo1FullCallback(hcan);
1907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       HAL_CAN_RxFifo1FullCallback(hcan);
1910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Receive FIFO 1 message pending interrupt management *********************/
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_MSG_PENDING) != 0U)
1916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check if message is still pending */
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) != 0U)
1919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Receive FIFO 1 message pending Callback */
1921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call registered callback*/
1923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->RxFifo1MsgPendingCallback(hcan);
1924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       HAL_CAN_RxFifo1MsgPendingCallback(hcan);
1927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Sleep interrupt management *********************************************/
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 96


1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((interrupts & CAN_IT_SLEEP_ACK) != 0U)
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((msrflags & CAN_MSR_SLAKI) != 0U)
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Clear Sleep interrupt Flag */
1937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_SLAKI);
1938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Sleep Callback */
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call registered callback*/
1942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->SleepCallback(hcan);
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       HAL_CAN_SleepCallback(hcan);
1946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* WakeUp interrupt management *********************************************/
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((interrupts & CAN_IT_WAKEUP) != 0U)
1952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((msrflags & CAN_MSR_WKUI) != 0U)
1954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Clear WakeUp Flag */
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_WKU);
1957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* WakeUp Callback */
1959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call registered callback*/
1961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->WakeUpFromRxMsgCallback(hcan);
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       HAL_CAN_WakeUpFromRxMsgCallback(hcan);
1965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Error interrupts management *********************************************/
1970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((interrupts & CAN_IT_ERROR) != 0U)
1971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((msrflags & CAN_MSR_ERRI) != 0U)
1973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Check Error Warning Flag */
1975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_WARNING) != 0U) &&
1976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Set CAN error code to Error Warning */
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EWG;
1980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* No need for clear of Error Warning Flag as read-only */
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Check Error Passive Flag */
1985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_PASSIVE) != 0U) &&
1986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
1987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Set CAN error code to Error Passive */
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 97


1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EPV;
1990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* No need for clear of Error Passive Flag as read-only */
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Check Bus-off Flag */
1995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if (((interrupts & CAN_IT_BUSOFF) != 0U) &&
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
1997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Set CAN error code to Bus-Off */
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_BOF;
2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* No need for clear of Error Bus-Off as read-only */
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
2003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Check Last Error Code Flag */
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if (((interrupts & CAN_IT_LAST_ERROR_CODE) != 0U) &&
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
2007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         switch (esrflags & CAN_ESR_LEC)
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
2010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_0):
2011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             /* Set CAN error code to Stuff error */
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_STF;
2013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_1):
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             /* Set CAN error code to Form error */
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_FOR;
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
2019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             /* Set CAN error code to Acknowledgement error */
2020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_ACK;
2021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_2):
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             /* Set CAN error code to Bit recessive error */
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BR;
2025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
2026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
2027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             /* Set CAN error code to Bit Dominant error */
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BD;
2029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
2030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             /* Set CAN error code to CRC error */
2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_CRC;
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
2034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           default:
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
2036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
2037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Clear Last error code Flag */
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
2040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
2041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Clear ERRI Flag */
2044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_ERRI);
2045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 98


2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Call the Error call Back in case of Errors */
2048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (errorcode != HAL_CAN_ERROR_NONE)
2049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
2050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code in handle */
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= errorcode;
2052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Call Error callback function */
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Call registered callback*/
2056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCallback(hcan);
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Call weak (surcharged) callback */
2059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     HAL_CAN_ErrorCallback(hcan);
2060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
2061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
2063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @}
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group5 Callback functions
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****  *  @brief   CAN Callback functions
2070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****  *
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @verbatim
2072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
2073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                           ##### Callback functions #####
2074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
2075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     [..]
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     This subsection provides the following callback functions:
2077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0CompleteCallback
2078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1CompleteCallback
2079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2CompleteCallback
2080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0AbortCallback
2081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1AbortCallback
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2AbortCallback
2083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_RxFifo0MsgPendingCallback
2084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_RxFifo0FullCallback
2085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_RxFifo1MsgPendingCallback
2086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_RxFifo1FullCallback
2087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_SleepCallback
2088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_WakeUpFromRxMsgCallback
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_ErrorCallback
2090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @endverbatim
2092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @{
2093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Transmission Mailbox 0 complete callback.
2097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0CompleteCallback(CAN_HandleTypeDef *hcan)
2102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 99


 2096              		.loc 1 2102 1 is_stmt 1 view -0
 2097              		.cfi_startproc
 2098              		@ args = 0, pretend = 0, frame = 0
 2099              		@ frame_needed = 0, uses_anonymous_args = 0
 2100              		@ link register save eliminated.
2103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2101              		.loc 1 2104 3 view .LVU707
2105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_TxMailbox0CompleteCallback could be implemented in the
2108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             user file
2109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2102              		.loc 1 2110 1 is_stmt 0 view .LVU708
 2103 0000 7047     		bx	lr
 2104              		.cfi_endproc
 2105              	.LFE341:
 2107              		.section	.text.HAL_CAN_TxMailbox1CompleteCallback,"ax",%progbits
 2108              		.align	1
 2109              		.weak	HAL_CAN_TxMailbox1CompleteCallback
 2110              		.syntax unified
 2111              		.thumb
 2112              		.thumb_func
 2114              	HAL_CAN_TxMailbox1CompleteCallback:
 2115              	.LVL161:
 2116              	.LFB342:
2111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Transmission Mailbox 1 complete callback.
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1CompleteCallback(CAN_HandleTypeDef *hcan)
2119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2117              		.loc 1 2119 1 is_stmt 1 view -0
 2118              		.cfi_startproc
 2119              		@ args = 0, pretend = 0, frame = 0
 2120              		@ frame_needed = 0, uses_anonymous_args = 0
 2121              		@ link register save eliminated.
2120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2122              		.loc 1 2121 3 view .LVU710
2122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_TxMailbox1CompleteCallback could be implemented in the
2125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             user file
2126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2123              		.loc 1 2127 1 is_stmt 0 view .LVU711
 2124 0000 7047     		bx	lr
 2125              		.cfi_endproc
 2126              	.LFE342:
 2128              		.section	.text.HAL_CAN_TxMailbox2CompleteCallback,"ax",%progbits
 2129              		.align	1
 2130              		.weak	HAL_CAN_TxMailbox2CompleteCallback
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 100


 2131              		.syntax unified
 2132              		.thumb
 2133              		.thumb_func
 2135              	HAL_CAN_TxMailbox2CompleteCallback:
 2136              	.LVL162:
 2137              	.LFB343:
2128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Transmission Mailbox 2 complete callback.
2131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2CompleteCallback(CAN_HandleTypeDef *hcan)
2136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2138              		.loc 1 2136 1 is_stmt 1 view -0
 2139              		.cfi_startproc
 2140              		@ args = 0, pretend = 0, frame = 0
 2141              		@ frame_needed = 0, uses_anonymous_args = 0
 2142              		@ link register save eliminated.
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2143              		.loc 1 2138 3 view .LVU713
2139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_TxMailbox2CompleteCallback could be implemented in the
2142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             user file
2143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2144              		.loc 1 2144 1 is_stmt 0 view .LVU714
 2145 0000 7047     		bx	lr
 2146              		.cfi_endproc
 2147              	.LFE343:
 2149              		.section	.text.HAL_CAN_TxMailbox0AbortCallback,"ax",%progbits
 2150              		.align	1
 2151              		.weak	HAL_CAN_TxMailbox0AbortCallback
 2152              		.syntax unified
 2153              		.thumb
 2154              		.thumb_func
 2156              	HAL_CAN_TxMailbox0AbortCallback:
 2157              	.LVL163:
 2158              	.LFB344:
2145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Transmission Mailbox 0 Cancellation callback.
2148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0AbortCallback(CAN_HandleTypeDef *hcan)
2153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2159              		.loc 1 2153 1 is_stmt 1 view -0
 2160              		.cfi_startproc
 2161              		@ args = 0, pretend = 0, frame = 0
 2162              		@ frame_needed = 0, uses_anonymous_args = 0
 2163              		@ link register save eliminated.
2154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 101


2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2164              		.loc 1 2155 3 view .LVU716
2156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_TxMailbox0AbortCallback could be implemented in the
2159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             user file
2160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2165              		.loc 1 2161 1 is_stmt 0 view .LVU717
 2166 0000 7047     		bx	lr
 2167              		.cfi_endproc
 2168              	.LFE344:
 2170              		.section	.text.HAL_CAN_TxMailbox1AbortCallback,"ax",%progbits
 2171              		.align	1
 2172              		.weak	HAL_CAN_TxMailbox1AbortCallback
 2173              		.syntax unified
 2174              		.thumb
 2175              		.thumb_func
 2177              	HAL_CAN_TxMailbox1AbortCallback:
 2178              	.LVL164:
 2179              	.LFB345:
2162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Transmission Mailbox 1 Cancellation callback.
2165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1AbortCallback(CAN_HandleTypeDef *hcan)
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2180              		.loc 1 2170 1 is_stmt 1 view -0
 2181              		.cfi_startproc
 2182              		@ args = 0, pretend = 0, frame = 0
 2183              		@ frame_needed = 0, uses_anonymous_args = 0
 2184              		@ link register save eliminated.
2171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2185              		.loc 1 2172 3 view .LVU719
2173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_TxMailbox1AbortCallback could be implemented in the
2176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             user file
2177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2186              		.loc 1 2178 1 is_stmt 0 view .LVU720
 2187 0000 7047     		bx	lr
 2188              		.cfi_endproc
 2189              	.LFE345:
 2191              		.section	.text.HAL_CAN_TxMailbox2AbortCallback,"ax",%progbits
 2192              		.align	1
 2193              		.weak	HAL_CAN_TxMailbox2AbortCallback
 2194              		.syntax unified
 2195              		.thumb
 2196              		.thumb_func
 2198              	HAL_CAN_TxMailbox2AbortCallback:
 2199              	.LVL165:
 2200              	.LFB346:
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 102


2179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Transmission Mailbox 2 Cancellation callback.
2182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2AbortCallback(CAN_HandleTypeDef *hcan)
2187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2201              		.loc 1 2187 1 is_stmt 1 view -0
 2202              		.cfi_startproc
 2203              		@ args = 0, pretend = 0, frame = 0
 2204              		@ frame_needed = 0, uses_anonymous_args = 0
 2205              		@ link register save eliminated.
2188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2206              		.loc 1 2189 3 view .LVU722
2190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_TxMailbox2AbortCallback could be implemented in the
2193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             user file
2194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2207              		.loc 1 2195 1 is_stmt 0 view .LVU723
 2208 0000 7047     		bx	lr
 2209              		.cfi_endproc
 2210              	.LFE346:
 2212              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 2213              		.align	1
 2214              		.weak	HAL_CAN_RxFifo0MsgPendingCallback
 2215              		.syntax unified
 2216              		.thumb
 2217              		.thumb_func
 2219              	HAL_CAN_RxFifo0MsgPendingCallback:
 2220              	.LVL166:
 2221              	.LFB347:
2196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Rx FIFO 0 message pending callback.
2199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
2204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2222              		.loc 1 2204 1 is_stmt 1 view -0
 2223              		.cfi_startproc
 2224              		@ args = 0, pretend = 0, frame = 0
 2225              		@ frame_needed = 0, uses_anonymous_args = 0
 2226              		@ link register save eliminated.
2205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2227              		.loc 1 2206 3 view .LVU725
2207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_RxFifo0MsgPendingCallback could be implemented in the
2210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             user file
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 103


2211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2228              		.loc 1 2212 1 is_stmt 0 view .LVU726
 2229 0000 7047     		bx	lr
 2230              		.cfi_endproc
 2231              	.LFE347:
 2233              		.section	.text.HAL_CAN_RxFifo0FullCallback,"ax",%progbits
 2234              		.align	1
 2235              		.weak	HAL_CAN_RxFifo0FullCallback
 2236              		.syntax unified
 2237              		.thumb
 2238              		.thumb_func
 2240              	HAL_CAN_RxFifo0FullCallback:
 2241              	.LVL167:
 2242              	.LFB348:
2213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Rx FIFO 0 full callback.
2216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_RxFifo0FullCallback(CAN_HandleTypeDef *hcan)
2221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2243              		.loc 1 2221 1 is_stmt 1 view -0
 2244              		.cfi_startproc
 2245              		@ args = 0, pretend = 0, frame = 0
 2246              		@ frame_needed = 0, uses_anonymous_args = 0
 2247              		@ link register save eliminated.
2222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2248              		.loc 1 2223 3 view .LVU728
2224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_RxFifo0FullCallback could be implemented in the user
2227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             file
2228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2249              		.loc 1 2229 1 is_stmt 0 view .LVU729
 2250 0000 7047     		bx	lr
 2251              		.cfi_endproc
 2252              	.LFE348:
 2254              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 2255              		.align	1
 2256              		.weak	HAL_CAN_RxFifo1MsgPendingCallback
 2257              		.syntax unified
 2258              		.thumb
 2259              		.thumb_func
 2261              	HAL_CAN_RxFifo1MsgPendingCallback:
 2262              	.LVL168:
 2263              	.LFB349:
2230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Rx FIFO 1 message pending callback.
2233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 104


2236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan)
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2264              		.loc 1 2238 1 is_stmt 1 view -0
 2265              		.cfi_startproc
 2266              		@ args = 0, pretend = 0, frame = 0
 2267              		@ frame_needed = 0, uses_anonymous_args = 0
 2268              		@ link register save eliminated.
2239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2269              		.loc 1 2240 3 view .LVU731
2241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_RxFifo1MsgPendingCallback could be implemented in the
2244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             user file
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2270              		.loc 1 2246 1 is_stmt 0 view .LVU732
 2271 0000 7047     		bx	lr
 2272              		.cfi_endproc
 2273              	.LFE349:
 2275              		.section	.text.HAL_CAN_RxFifo1FullCallback,"ax",%progbits
 2276              		.align	1
 2277              		.weak	HAL_CAN_RxFifo1FullCallback
 2278              		.syntax unified
 2279              		.thumb
 2280              		.thumb_func
 2282              	HAL_CAN_RxFifo1FullCallback:
 2283              	.LVL169:
 2284              	.LFB350:
2247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Rx FIFO 1 full callback.
2250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_RxFifo1FullCallback(CAN_HandleTypeDef *hcan)
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2285              		.loc 1 2255 1 is_stmt 1 view -0
 2286              		.cfi_startproc
 2287              		@ args = 0, pretend = 0, frame = 0
 2288              		@ frame_needed = 0, uses_anonymous_args = 0
 2289              		@ link register save eliminated.
2256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2290              		.loc 1 2257 3 view .LVU734
2258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_RxFifo1FullCallback could be implemented in the user
2261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             file
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2291              		.loc 1 2263 1 is_stmt 0 view .LVU735
 2292 0000 7047     		bx	lr
 2293              		.cfi_endproc
 2294              	.LFE350:
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 105


 2296              		.section	.text.HAL_CAN_SleepCallback,"ax",%progbits
 2297              		.align	1
 2298              		.weak	HAL_CAN_SleepCallback
 2299              		.syntax unified
 2300              		.thumb
 2301              		.thumb_func
 2303              	HAL_CAN_SleepCallback:
 2304              	.LVL170:
 2305              	.LFB351:
2264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Sleep callback.
2267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_SleepCallback(CAN_HandleTypeDef *hcan)
2272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2306              		.loc 1 2272 1 is_stmt 1 view -0
 2307              		.cfi_startproc
 2308              		@ args = 0, pretend = 0, frame = 0
 2309              		@ frame_needed = 0, uses_anonymous_args = 0
 2310              		@ link register save eliminated.
2273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2311              		.loc 1 2274 3 view .LVU737
2275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_SleepCallback could be implemented in the user file
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2312              		.loc 1 2279 1 is_stmt 0 view .LVU738
 2313 0000 7047     		bx	lr
 2314              		.cfi_endproc
 2315              	.LFE351:
 2317              		.section	.text.HAL_CAN_WakeUpFromRxMsgCallback,"ax",%progbits
 2318              		.align	1
 2319              		.weak	HAL_CAN_WakeUpFromRxMsgCallback
 2320              		.syntax unified
 2321              		.thumb
 2322              		.thumb_func
 2324              	HAL_CAN_WakeUpFromRxMsgCallback:
 2325              	.LVL171:
 2326              	.LFB352:
2280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  WakeUp from Rx message callback.
2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_WakeUpFromRxMsgCallback(CAN_HandleTypeDef *hcan)
2288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2327              		.loc 1 2288 1 is_stmt 1 view -0
 2328              		.cfi_startproc
 2329              		@ args = 0, pretend = 0, frame = 0
 2330              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 106


 2331              		@ link register save eliminated.
2289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2332              		.loc 1 2290 3 view .LVU740
2291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_WakeUpFromRxMsgCallback could be implemented in the
2294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             user file
2295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2333              		.loc 1 2296 1 is_stmt 0 view .LVU741
 2334 0000 7047     		bx	lr
 2335              		.cfi_endproc
 2336              	.LFE352:
 2338              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 2339              		.align	1
 2340              		.weak	HAL_CAN_ErrorCallback
 2341              		.syntax unified
 2342              		.thumb
 2343              		.thumb_func
 2345              	HAL_CAN_ErrorCallback:
 2346              	.LVL172:
 2347              	.LFB353:
2297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Error CAN callback.
2300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2348              		.loc 1 2305 1 is_stmt 1 view -0
 2349              		.cfi_startproc
 2350              		@ args = 0, pretend = 0, frame = 0
 2351              		@ frame_needed = 0, uses_anonymous_args = 0
 2352              		@ link register save eliminated.
2306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2353              		.loc 1 2307 3 view .LVU743
2308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_ErrorCallback could be implemented in the user file
2311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2354              		.loc 1 2312 1 is_stmt 0 view .LVU744
 2355 0000 7047     		bx	lr
 2356              		.cfi_endproc
 2357              	.LFE353:
 2359              		.section	.text.HAL_CAN_IRQHandler,"ax",%progbits
 2360              		.align	1
 2361              		.global	HAL_CAN_IRQHandler
 2362              		.syntax unified
 2363              		.thumb
 2364              		.thumb_func
 2366              	HAL_CAN_IRQHandler:
 2367              	.LVL173:
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 107


 2368              	.LFB340:
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2369              		.loc 1 1691 1 is_stmt 1 view -0
 2370              		.cfi_startproc
 2371              		@ args = 0, pretend = 0, frame = 0
 2372              		@ frame_needed = 0, uses_anonymous_args = 0
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2373              		.loc 1 1691 1 is_stmt 0 view .LVU746
 2374 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2375              		.cfi_def_cfa_offset 40
 2376              		.cfi_offset 3, -40
 2377              		.cfi_offset 4, -36
 2378              		.cfi_offset 5, -32
 2379              		.cfi_offset 6, -28
 2380              		.cfi_offset 7, -24
 2381              		.cfi_offset 8, -20
 2382              		.cfi_offset 9, -16
 2383              		.cfi_offset 10, -12
 2384              		.cfi_offset 11, -8
 2385              		.cfi_offset 14, -4
 2386 0004 0546     		mov	r5, r0
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 2387              		.loc 1 1692 3 is_stmt 1 view .LVU747
 2388              	.LVL174:
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2389              		.loc 1 1693 3 view .LVU748
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2390              		.loc 1 1693 25 is_stmt 0 view .LVU749
 2391 0006 0368     		ldr	r3, [r0]
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2392              		.loc 1 1693 12 view .LVU750
 2393 0008 5C69     		ldr	r4, [r3, #20]
 2394              	.LVL175:
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 2395              		.loc 1 1694 3 is_stmt 1 view .LVU751
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 2396              		.loc 1 1694 12 is_stmt 0 view .LVU752
 2397 000a D3F80480 		ldr	r8, [r3, #4]
 2398              	.LVL176:
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 2399              		.loc 1 1695 3 is_stmt 1 view .LVU753
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 2400              		.loc 1 1695 12 is_stmt 0 view .LVU754
 2401 000e 9F68     		ldr	r7, [r3, #8]
 2402              	.LVL177:
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 2403              		.loc 1 1696 3 is_stmt 1 view .LVU755
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 2404              		.loc 1 1696 12 is_stmt 0 view .LVU756
 2405 0010 D3F80CB0 		ldr	fp, [r3, #12]
 2406              	.LVL178:
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 2407              		.loc 1 1697 3 is_stmt 1 view .LVU757
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 2408              		.loc 1 1697 12 is_stmt 0 view .LVU758
 2409 0014 D3F810A0 		ldr	r10, [r3, #16]
 2410              	.LVL179:
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 108


1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2411              		.loc 1 1698 3 is_stmt 1 view .LVU759
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2412              		.loc 1 1698 12 is_stmt 0 view .LVU760
 2413 0018 D3F81890 		ldr	r9, [r3, #24]
 2414              	.LVL180:
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2415              		.loc 1 1701 3 is_stmt 1 view .LVU761
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2416              		.loc 1 1701 6 is_stmt 0 view .LVU762
 2417 001c 14F00106 		ands	r6, r4, #1
 2418 0020 3BD0     		beq	.L171
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2419              		.loc 1 1704 5 is_stmt 1 view .LVU763
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2420              		.loc 1 1704 8 is_stmt 0 view .LVU764
 2421 0022 17F00106 		ands	r6, r7, #1
 2422 0026 16D0     		beq	.L172
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2423              		.loc 1 1707 7 is_stmt 1 view .LVU765
 2424 0028 0122     		movs	r2, #1
 2425 002a 9A60     		str	r2, [r3, #8]
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 2426              		.loc 1 1709 7 view .LVU766
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 2427              		.loc 1 1709 10 is_stmt 0 view .LVU767
 2428 002c 17F0020F 		tst	r7, #2
 2429 0030 08D1     		bne	.L206
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2430              		.loc 1 1722 9 is_stmt 1 view .LVU768
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2431              		.loc 1 1722 12 is_stmt 0 view .LVU769
 2432 0032 17F0040F 		tst	r7, #4
 2433 0036 0CD1     		bne	.L203
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2434              		.loc 1 1727 14 is_stmt 1 view .LVU770
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2435              		.loc 1 1727 17 is_stmt 0 view .LVU771
 2436 0038 17F00806 		ands	r6, r7, #8
 2437 003c 06D0     		beq	.L207
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2438              		.loc 1 1730 21 view .LVU772
 2439 003e 4FF48056 		mov	r6, #4096
 2440 0042 08E0     		b	.L172
 2441              	.L206:
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2442              		.loc 1 1717 9 is_stmt 1 view .LVU773
 2443 0044 FFF7FEFF 		bl	HAL_CAN_TxMailbox0CompleteCallback
 2444              	.LVL181:
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 2445              		.loc 1 1692 12 is_stmt 0 view .LVU774
 2446 0048 0026     		movs	r6, #0
 2447 004a 04E0     		b	.L172
 2448              	.LVL182:
 2449              	.L207:
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2450              		.loc 1 1740 11 is_stmt 1 view .LVU775
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 109


 2451 004c FFF7FEFF 		bl	HAL_CAN_TxMailbox0AbortCallback
 2452              	.LVL183:
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2453              		.loc 1 1740 11 is_stmt 0 view .LVU776
 2454 0050 01E0     		b	.L172
 2455              	.LVL184:
 2456              	.L203:
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2457              		.loc 1 1725 21 view .LVU777
 2458 0052 4FF40066 		mov	r6, #2048
 2459              	.LVL185:
 2460              	.L172:
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2461              		.loc 1 1747 5 is_stmt 1 view .LVU778
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2462              		.loc 1 1747 8 is_stmt 0 view .LVU779
 2463 0056 17F4807F 		tst	r7, #256
 2464 005a 0DD0     		beq	.L174
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2465              		.loc 1 1750 7 is_stmt 1 view .LVU780
 2466 005c 2B68     		ldr	r3, [r5]
 2467 005e 4FF48072 		mov	r2, #256
 2468 0062 9A60     		str	r2, [r3, #8]
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 2469              		.loc 1 1752 7 view .LVU781
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 2470              		.loc 1 1752 10 is_stmt 0 view .LVU782
 2471 0064 17F4007F 		tst	r7, #512
 2472 0068 40F08680 		bne	.L208
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2473              		.loc 1 1765 9 is_stmt 1 view .LVU783
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2474              		.loc 1 1765 12 is_stmt 0 view .LVU784
 2475 006c 17F4806F 		tst	r7, #1024
 2476 0070 00F08680 		beq	.L176
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2477              		.loc 1 1768 11 is_stmt 1 view .LVU785
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2478              		.loc 1 1768 21 is_stmt 0 view .LVU786
 2479 0074 46F40056 		orr	r6, r6, #8192
 2480              	.LVL186:
 2481              	.L174:
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2482              		.loc 1 1790 5 is_stmt 1 view .LVU787
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2483              		.loc 1 1790 8 is_stmt 0 view .LVU788
 2484 0078 17F4803F 		tst	r7, #65536
 2485 007c 0DD0     		beq	.L171
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2486              		.loc 1 1793 7 is_stmt 1 view .LVU789
 2487 007e 2B68     		ldr	r3, [r5]
 2488 0080 4FF48032 		mov	r2, #65536
 2489 0084 9A60     		str	r2, [r3, #8]
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 2490              		.loc 1 1795 7 view .LVU790
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 2491              		.loc 1 1795 10 is_stmt 0 view .LVU791
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 110


 2492 0086 17F4003F 		tst	r7, #131072
 2493 008a 40F08380 		bne	.L209
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2494              		.loc 1 1808 9 is_stmt 1 view .LVU792
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2495              		.loc 1 1808 12 is_stmt 0 view .LVU793
 2496 008e 17F4802F 		tst	r7, #262144
 2497 0092 00F08380 		beq	.L179
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2498              		.loc 1 1811 11 is_stmt 1 view .LVU794
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2499              		.loc 1 1811 21 is_stmt 0 view .LVU795
 2500 0096 46F40046 		orr	r6, r6, #32768
 2501              	.LVL187:
 2502              	.L171:
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2503              		.loc 1 1834 3 is_stmt 1 view .LVU796
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2504              		.loc 1 1834 6 is_stmt 0 view .LVU797
 2505 009a 14F0080F 		tst	r4, #8
 2506 009e 07D0     		beq	.L181
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2507              		.loc 1 1836 5 is_stmt 1 view .LVU798
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2508              		.loc 1 1836 8 is_stmt 0 view .LVU799
 2509 00a0 1BF0100F 		tst	fp, #16
 2510 00a4 04D0     		beq	.L181
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2511              		.loc 1 1839 7 is_stmt 1 view .LVU800
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2512              		.loc 1 1839 17 is_stmt 0 view .LVU801
 2513 00a6 46F40076 		orr	r6, r6, #512
 2514              	.LVL188:
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 2515              		.loc 1 1842 7 is_stmt 1 view .LVU802
 2516 00aa 2B68     		ldr	r3, [r5]
 2517 00ac 1022     		movs	r2, #16
 2518 00ae DA60     		str	r2, [r3, #12]
 2519              	.L181:
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2520              		.loc 1 1847 3 view .LVU803
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2521              		.loc 1 1847 6 is_stmt 0 view .LVU804
 2522 00b0 14F0040F 		tst	r4, #4
 2523 00b4 02D0     		beq	.L182
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2524              		.loc 1 1849 5 is_stmt 1 view .LVU805
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2525              		.loc 1 1849 8 is_stmt 0 view .LVU806
 2526 00b6 1BF0080F 		tst	fp, #8
 2527 00ba 79D1     		bne	.L210
 2528              	.L182:
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2529              		.loc 1 1866 3 is_stmt 1 view .LVU807
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2530              		.loc 1 1866 6 is_stmt 0 view .LVU808
 2531 00bc 14F0020F 		tst	r4, #2
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 111


 2532 00c0 04D0     		beq	.L183
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2533              		.loc 1 1869 5 is_stmt 1 view .LVU809
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2534              		.loc 1 1869 14 is_stmt 0 view .LVU810
 2535 00c2 2B68     		ldr	r3, [r5]
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2536              		.loc 1 1869 24 view .LVU811
 2537 00c4 DB68     		ldr	r3, [r3, #12]
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2538              		.loc 1 1869 8 view .LVU812
 2539 00c6 13F0030F 		tst	r3, #3
 2540 00ca 78D1     		bne	.L211
 2541              	.L183:
1883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2542              		.loc 1 1883 3 is_stmt 1 view .LVU813
1883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2543              		.loc 1 1883 6 is_stmt 0 view .LVU814
 2544 00cc 14F0400F 		tst	r4, #64
 2545 00d0 07D0     		beq	.L184
1885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2546              		.loc 1 1885 5 is_stmt 1 view .LVU815
1885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2547              		.loc 1 1885 8 is_stmt 0 view .LVU816
 2548 00d2 1AF0100F 		tst	r10, #16
 2549 00d6 04D0     		beq	.L184
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2550              		.loc 1 1888 7 is_stmt 1 view .LVU817
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2551              		.loc 1 1888 17 is_stmt 0 view .LVU818
 2552 00d8 46F48066 		orr	r6, r6, #1024
 2553              	.LVL189:
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 2554              		.loc 1 1891 7 is_stmt 1 view .LVU819
 2555 00dc 2B68     		ldr	r3, [r5]
 2556 00de 1022     		movs	r2, #16
 2557 00e0 1A61     		str	r2, [r3, #16]
 2558              	.L184:
1896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2559              		.loc 1 1896 3 view .LVU820
1896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2560              		.loc 1 1896 6 is_stmt 0 view .LVU821
 2561 00e2 14F0200F 		tst	r4, #32
 2562 00e6 02D0     		beq	.L185
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2563              		.loc 1 1898 5 is_stmt 1 view .LVU822
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2564              		.loc 1 1898 8 is_stmt 0 view .LVU823
 2565 00e8 1AF0080F 		tst	r10, #8
 2566 00ec 6BD1     		bne	.L212
 2567              	.L185:
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2568              		.loc 1 1915 3 is_stmt 1 view .LVU824
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2569              		.loc 1 1915 6 is_stmt 0 view .LVU825
 2570 00ee 14F0100F 		tst	r4, #16
 2571 00f2 04D0     		beq	.L186
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 112


1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2572              		.loc 1 1918 5 is_stmt 1 view .LVU826
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2573              		.loc 1 1918 14 is_stmt 0 view .LVU827
 2574 00f4 2B68     		ldr	r3, [r5]
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2575              		.loc 1 1918 24 view .LVU828
 2576 00f6 1B69     		ldr	r3, [r3, #16]
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2577              		.loc 1 1918 8 view .LVU829
 2578 00f8 13F0030F 		tst	r3, #3
 2579 00fc 6AD1     		bne	.L213
 2580              	.L186:
1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2581              		.loc 1 1932 3 is_stmt 1 view .LVU830
1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2582              		.loc 1 1932 6 is_stmt 0 view .LVU831
 2583 00fe 14F4003F 		tst	r4, #131072
 2584 0102 02D0     		beq	.L187
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2585              		.loc 1 1934 5 is_stmt 1 view .LVU832
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2586              		.loc 1 1934 8 is_stmt 0 view .LVU833
 2587 0104 18F0100F 		tst	r8, #16
 2588 0108 68D1     		bne	.L214
 2589              	.L187:
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2590              		.loc 1 1951 3 is_stmt 1 view .LVU834
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2591              		.loc 1 1951 6 is_stmt 0 view .LVU835
 2592 010a 14F4803F 		tst	r4, #65536
 2593 010e 02D0     		beq	.L188
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2594              		.loc 1 1953 5 is_stmt 1 view .LVU836
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2595              		.loc 1 1953 8 is_stmt 0 view .LVU837
 2596 0110 18F0080F 		tst	r8, #8
 2597 0114 69D1     		bne	.L215
 2598              	.L188:
1970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2599              		.loc 1 1970 3 is_stmt 1 view .LVU838
1970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2600              		.loc 1 1970 6 is_stmt 0 view .LVU839
 2601 0116 14F4004F 		tst	r4, #32768
 2602 011a 7AD0     		beq	.L189
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2603              		.loc 1 1972 5 is_stmt 1 view .LVU840
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2604              		.loc 1 1972 8 is_stmt 0 view .LVU841
 2605 011c 18F0040F 		tst	r8, #4
 2606 0120 74D0     		beq	.L190
1975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2607              		.loc 1 1975 7 is_stmt 1 view .LVU842
1975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2608              		.loc 1 1975 10 is_stmt 0 view .LVU843
 2609 0122 14F4807F 		tst	r4, #256
 2610 0126 04D0     		beq	.L191
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 113


1975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2611              		.loc 1 1975 55 discriminator 1 view .LVU844
 2612 0128 19F0010F 		tst	r9, #1
 2613 012c 01D0     		beq	.L191
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2614              		.loc 1 1979 9 is_stmt 1 view .LVU845
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2615              		.loc 1 1979 19 is_stmt 0 view .LVU846
 2616 012e 46F00106 		orr	r6, r6, #1
 2617              	.LVL190:
 2618              	.L191:
1985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2619              		.loc 1 1985 7 is_stmt 1 view .LVU847
1985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2620              		.loc 1 1985 10 is_stmt 0 view .LVU848
 2621 0132 14F4007F 		tst	r4, #512
 2622 0136 04D0     		beq	.L192
1985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2623              		.loc 1 1985 55 discriminator 1 view .LVU849
 2624 0138 19F0020F 		tst	r9, #2
 2625 013c 01D0     		beq	.L192
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2626              		.loc 1 1989 9 is_stmt 1 view .LVU850
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2627              		.loc 1 1989 19 is_stmt 0 view .LVU851
 2628 013e 46F00206 		orr	r6, r6, #2
 2629              	.LVL191:
 2630              	.L192:
1995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2631              		.loc 1 1995 7 is_stmt 1 view .LVU852
1995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2632              		.loc 1 1995 10 is_stmt 0 view .LVU853
 2633 0142 14F4806F 		tst	r4, #1024
 2634 0146 04D0     		beq	.L193
1995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2635              		.loc 1 1995 48 discriminator 1 view .LVU854
 2636 0148 19F0040F 		tst	r9, #4
 2637 014c 01D0     		beq	.L193
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2638              		.loc 1 1999 9 is_stmt 1 view .LVU855
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2639              		.loc 1 1999 19 is_stmt 0 view .LVU856
 2640 014e 46F00406 		orr	r6, r6, #4
 2641              	.LVL192:
 2642              	.L193:
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2643              		.loc 1 2005 7 is_stmt 1 view .LVU857
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2644              		.loc 1 2005 10 is_stmt 0 view .LVU858
 2645 0152 14F4006F 		tst	r4, #2048
 2646 0156 59D0     		beq	.L190
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2647              		.loc 1 2005 57 discriminator 1 view .LVU859
 2648 0158 19F07009 		ands	r9, r9, #112
 2649              	.LVL193:
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2650              		.loc 1 2005 57 discriminator 1 view .LVU860
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 114


 2651 015c 56D0     		beq	.L190
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2652              		.loc 1 2008 9 is_stmt 1 view .LVU861
 2653 015e B9F1400F 		cmp	r9, #64
 2654 0162 65D0     		beq	.L194
 2655 0164 58D8     		bhi	.L195
 2656 0166 B9F1200F 		cmp	r9, #32
 2657 016a 5ED0     		beq	.L196
 2658 016c B9F1300F 		cmp	r9, #48
 2659 0170 42D1     		bne	.L216
2020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2660              		.loc 1 2020 13 view .LVU862
2020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2661              		.loc 1 2020 23 is_stmt 0 view .LVU863
 2662 0172 46F02006 		orr	r6, r6, #32
 2663              	.LVL194:
2021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_2):
 2664              		.loc 1 2021 13 is_stmt 1 view .LVU864
 2665 0176 44E0     		b	.L199
 2666              	.LVL195:
 2667              	.L208:
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2668              		.loc 1 1760 9 view .LVU865
 2669 0178 2846     		mov	r0, r5
 2670 017a FFF7FEFF 		bl	HAL_CAN_TxMailbox1CompleteCallback
 2671              	.LVL196:
 2672 017e 7BE7     		b	.L174
 2673              	.L176:
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2674              		.loc 1 1770 14 view .LVU866
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2675              		.loc 1 1770 17 is_stmt 0 view .LVU867
 2676 0180 17F4006F 		tst	r7, #2048
 2677 0184 02D0     		beq	.L177
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2678              		.loc 1 1773 11 is_stmt 1 view .LVU868
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2679              		.loc 1 1773 21 is_stmt 0 view .LVU869
 2680 0186 46F48046 		orr	r6, r6, #16384
 2681              	.LVL197:
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2682              		.loc 1 1773 21 view .LVU870
 2683 018a 75E7     		b	.L174
 2684              	.L177:
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2685              		.loc 1 1783 11 is_stmt 1 view .LVU871
 2686 018c 2846     		mov	r0, r5
 2687 018e FFF7FEFF 		bl	HAL_CAN_TxMailbox1AbortCallback
 2688              	.LVL198:
 2689 0192 71E7     		b	.L174
 2690              	.L209:
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2691              		.loc 1 1803 9 view .LVU872
 2692 0194 2846     		mov	r0, r5
 2693 0196 FFF7FEFF 		bl	HAL_CAN_TxMailbox2CompleteCallback
 2694              	.LVL199:
 2695 019a 7EE7     		b	.L171
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 115


 2696              	.L179:
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2697              		.loc 1 1813 14 view .LVU873
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2698              		.loc 1 1813 17 is_stmt 0 view .LVU874
 2699 019c 17F4002F 		tst	r7, #524288
 2700 01a0 02D0     		beq	.L180
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2701              		.loc 1 1816 11 is_stmt 1 view .LVU875
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2702              		.loc 1 1816 21 is_stmt 0 view .LVU876
 2703 01a2 46F48036 		orr	r6, r6, #65536
 2704              	.LVL200:
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2705              		.loc 1 1816 21 view .LVU877
 2706 01a6 78E7     		b	.L171
 2707              	.L180:
1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2708              		.loc 1 1826 11 is_stmt 1 view .LVU878
 2709 01a8 2846     		mov	r0, r5
 2710 01aa FFF7FEFF 		bl	HAL_CAN_TxMailbox2AbortCallback
 2711              	.LVL201:
 2712 01ae 74E7     		b	.L171
 2713              	.L210:
1852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2714              		.loc 1 1852 7 view .LVU879
 2715 01b0 2B68     		ldr	r3, [r5]
 2716 01b2 0822     		movs	r2, #8
 2717 01b4 DA60     		str	r2, [r3, #12]
1860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2718              		.loc 1 1860 7 view .LVU880
 2719 01b6 2846     		mov	r0, r5
 2720 01b8 FFF7FEFF 		bl	HAL_CAN_RxFifo0FullCallback
 2721              	.LVL202:
 2722 01bc 7EE7     		b	.L182
 2723              	.L211:
1877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2724              		.loc 1 1877 7 view .LVU881
 2725 01be 2846     		mov	r0, r5
 2726 01c0 FFF7FEFF 		bl	HAL_CAN_RxFifo0MsgPendingCallback
 2727              	.LVL203:
 2728 01c4 82E7     		b	.L183
 2729              	.L212:
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2730              		.loc 1 1901 7 view .LVU882
 2731 01c6 2B68     		ldr	r3, [r5]
 2732 01c8 0822     		movs	r2, #8
 2733 01ca 1A61     		str	r2, [r3, #16]
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2734              		.loc 1 1909 7 view .LVU883
 2735 01cc 2846     		mov	r0, r5
 2736 01ce FFF7FEFF 		bl	HAL_CAN_RxFifo1FullCallback
 2737              	.LVL204:
 2738 01d2 8CE7     		b	.L185
 2739              	.L213:
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2740              		.loc 1 1926 7 view .LVU884
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 116


 2741 01d4 2846     		mov	r0, r5
 2742 01d6 FFF7FEFF 		bl	HAL_CAN_RxFifo1MsgPendingCallback
 2743              	.LVL205:
 2744 01da 90E7     		b	.L186
 2745              	.L214:
1937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2746              		.loc 1 1937 7 view .LVU885
 2747 01dc 2B68     		ldr	r3, [r5]
 2748 01de 1022     		movs	r2, #16
 2749 01e0 5A60     		str	r2, [r3, #4]
1945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2750              		.loc 1 1945 7 view .LVU886
 2751 01e2 2846     		mov	r0, r5
 2752 01e4 FFF7FEFF 		bl	HAL_CAN_SleepCallback
 2753              	.LVL206:
 2754 01e8 8FE7     		b	.L187
 2755              	.L215:
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2756              		.loc 1 1956 7 view .LVU887
 2757 01ea 2B68     		ldr	r3, [r5]
 2758 01ec 0822     		movs	r2, #8
 2759 01ee 5A60     		str	r2, [r3, #4]
1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2760              		.loc 1 1964 7 view .LVU888
 2761 01f0 2846     		mov	r0, r5
 2762 01f2 FFF7FEFF 		bl	HAL_CAN_WakeUpFromRxMsgCallback
 2763              	.LVL207:
 2764 01f6 8EE7     		b	.L188
 2765              	.LVL208:
 2766              	.L216:
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2767              		.loc 1 2008 9 is_stmt 0 view .LVU889
 2768 01f8 B9F1100F 		cmp	r9, #16
 2769 01fc 01D1     		bne	.L199
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2770              		.loc 1 2012 13 is_stmt 1 view .LVU890
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2771              		.loc 1 2012 23 is_stmt 0 view .LVU891
 2772 01fe 46F00806 		orr	r6, r6, #8
 2773              	.LVL209:
2013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_1):
 2774              		.loc 1 2013 13 is_stmt 1 view .LVU892
 2775              	.L199:
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 2776              		.loc 1 2039 9 view .LVU893
 2777 0202 2A68     		ldr	r2, [r5]
 2778 0204 9369     		ldr	r3, [r2, #24]
 2779 0206 23F07003 		bic	r3, r3, #112
 2780 020a 9361     		str	r3, [r2, #24]
 2781              	.L190:
2044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 2782              		.loc 1 2044 5 view .LVU894
 2783 020c 2B68     		ldr	r3, [r5]
 2784 020e 0422     		movs	r2, #4
 2785 0210 5A60     		str	r2, [r3, #4]
 2786              	.L189:
2048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 117


 2787              		.loc 1 2048 3 view .LVU895
2048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2788              		.loc 1 2048 6 is_stmt 0 view .LVU896
 2789 0212 9EB9     		cbnz	r6, .L217
 2790              	.L170:
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2791              		.loc 1 2062 1 view .LVU897
 2792 0214 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2793              	.LVL210:
 2794              	.L195:
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2795              		.loc 1 2008 9 view .LVU898
 2796 0218 B9F1500F 		cmp	r9, #80
 2797 021c 0BD0     		beq	.L200
 2798 021e B9F1600F 		cmp	r9, #96
 2799 0222 EED1     		bne	.L199
2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2800              		.loc 1 2032 13 is_stmt 1 view .LVU899
2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2801              		.loc 1 2032 23 is_stmt 0 view .LVU900
 2802 0224 46F48076 		orr	r6, r6, #256
 2803              	.LVL211:
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           default:
 2804              		.loc 1 2033 13 is_stmt 1 view .LVU901
 2805 0228 EBE7     		b	.L199
 2806              	.L196:
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2807              		.loc 1 2016 13 view .LVU902
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2808              		.loc 1 2016 23 is_stmt 0 view .LVU903
 2809 022a 46F01006 		orr	r6, r6, #16
 2810              	.LVL212:
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
 2811              		.loc 1 2017 13 is_stmt 1 view .LVU904
 2812 022e E8E7     		b	.L199
 2813              	.L194:
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2814              		.loc 1 2024 13 view .LVU905
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2815              		.loc 1 2024 23 is_stmt 0 view .LVU906
 2816 0230 46F04006 		orr	r6, r6, #64
 2817              	.LVL213:
2025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
 2818              		.loc 1 2025 13 is_stmt 1 view .LVU907
 2819 0234 E5E7     		b	.L199
 2820              	.L200:
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2821              		.loc 1 2028 13 view .LVU908
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2822              		.loc 1 2028 23 is_stmt 0 view .LVU909
 2823 0236 46F08006 		orr	r6, r6, #128
 2824              	.LVL214:
2029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
 2825              		.loc 1 2029 13 is_stmt 1 view .LVU910
 2826 023a E2E7     		b	.L199
 2827              	.L217:
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 118


 2828              		.loc 1 2051 5 view .LVU911
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2829              		.loc 1 2051 9 is_stmt 0 view .LVU912
 2830 023c 6B6A     		ldr	r3, [r5, #36]
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2831              		.loc 1 2051 21 view .LVU913
 2832 023e 3343     		orrs	r3, r3, r6
 2833 0240 6B62     		str	r3, [r5, #36]
2059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2834              		.loc 1 2059 5 is_stmt 1 view .LVU914
 2835 0242 2846     		mov	r0, r5
 2836 0244 FFF7FEFF 		bl	HAL_CAN_ErrorCallback
 2837              	.LVL215:
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2838              		.loc 1 2062 1 is_stmt 0 view .LVU915
 2839 0248 E4E7     		b	.L170
 2840              		.cfi_endproc
 2841              	.LFE340:
 2843              		.section	.text.HAL_CAN_GetState,"ax",%progbits
 2844              		.align	1
 2845              		.global	HAL_CAN_GetState
 2846              		.syntax unified
 2847              		.thumb
 2848              		.thumb_func
 2850              	HAL_CAN_GetState:
 2851              	.LVL216:
 2852              	.LFB354:
2313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @}
2316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group6 Peripheral State and Error functions
2319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****  *  @brief   CAN Peripheral State functions
2320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****  *
2321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @verbatim
2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
2323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             ##### Peripheral State and Error functions #####
2324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     [..]
2326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     This subsection provides functions allowing to :
2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_GetState()  : Return the CAN state.
2328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_GetError()  : Return the CAN error codes if any.
2329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_ResetError(): Reset the CAN error codes if any.
2330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @endverbatim
2332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @{
2333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Return the CAN state.
2337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL state
2340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_CAN_StateTypeDef HAL_CAN_GetState(const CAN_HandleTypeDef *hcan)
2342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 119


 2853              		.loc 1 2342 1 is_stmt 1 view -0
 2854              		.cfi_startproc
 2855              		@ args = 0, pretend = 0, frame = 0
 2856              		@ frame_needed = 0, uses_anonymous_args = 0
 2857              		@ link register save eliminated.
 2858              		.loc 1 2342 1 is_stmt 0 view .LVU917
 2859 0000 0246     		mov	r2, r0
2343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2860              		.loc 1 2343 3 is_stmt 1 view .LVU918
 2861              		.loc 1 2343 24 is_stmt 0 view .LVU919
 2862 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2863 0006 D8B2     		uxtb	r0, r3
 2864              	.LVL217:
2344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2865              		.loc 1 2345 3 is_stmt 1 view .LVU920
 2866              		.loc 1 2345 38 is_stmt 0 view .LVU921
 2867 0008 013B     		subs	r3, r3, #1
 2868 000a DBB2     		uxtb	r3, r3
 2869              		.loc 1 2345 6 view .LVU922
 2870 000c 012B     		cmp	r3, #1
 2871 000e 00D9     		bls	.L222
 2872              	.LVL218:
 2873              	.L219:
2346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
2348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check sleep mode acknowledge flag */
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
2350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
2351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Sleep mode is active */
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_ACTIVE;
2353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
2354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check sleep mode request flag */
2355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     else if ((hcan->Instance->MCR & CAN_MCR_SLEEP) != 0U)
2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
2357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Sleep mode request is pending */
2358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_PENDING;
2359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
2360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     else
2361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Neither sleep mode request nor sleep mode acknowledge */
2363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 2874              		.loc 1 2363 5 is_stmt 1 view .LVU923
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Return CAN state */
2367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return state;
 2875              		.loc 1 2367 3 view .LVU924
2368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2876              		.loc 1 2368 1 is_stmt 0 view .LVU925
 2877 0010 7047     		bx	lr
 2878              	.LVL219:
 2879              	.L222:
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2880              		.loc 1 2349 5 is_stmt 1 view .LVU926
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2881              		.loc 1 2349 14 is_stmt 0 view .LVU927
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 120


 2882 0012 1368     		ldr	r3, [r2]
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2883              		.loc 1 2349 24 view .LVU928
 2884 0014 5A68     		ldr	r2, [r3, #4]
 2885              	.LVL220:
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2886              		.loc 1 2349 8 view .LVU929
 2887 0016 12F0020F 		tst	r2, #2
 2888 001a 05D1     		bne	.L220
2355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2889              		.loc 1 2355 10 is_stmt 1 view .LVU930
2355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2890              		.loc 1 2355 29 is_stmt 0 view .LVU931
 2891 001c 1B68     		ldr	r3, [r3]
2355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2892              		.loc 1 2355 13 view .LVU932
 2893 001e 13F0020F 		tst	r3, #2
 2894 0022 F5D0     		beq	.L219
2358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 2895              		.loc 1 2358 13 view .LVU933
 2896 0024 0320     		movs	r0, #3
 2897              	.LVL221:
2358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 2898              		.loc 1 2358 13 view .LVU934
 2899 0026 F3E7     		b	.L219
 2900              	.LVL222:
 2901              	.L220:
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 2902              		.loc 1 2352 13 view .LVU935
 2903 0028 0420     		movs	r0, #4
 2904              	.LVL223:
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 2905              		.loc 1 2352 13 view .LVU936
 2906 002a 7047     		bx	lr
 2907              		.cfi_endproc
 2908              	.LFE354:
 2910              		.section	.text.HAL_CAN_GetError,"ax",%progbits
 2911              		.align	1
 2912              		.global	HAL_CAN_GetError
 2913              		.syntax unified
 2914              		.thumb
 2915              		.thumb_func
 2917              	HAL_CAN_GetError:
 2918              	.LVL224:
 2919              	.LFB355:
2369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Return the CAN error code.
2372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval CAN Error Code
2375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** uint32_t HAL_CAN_GetError(const CAN_HandleTypeDef *hcan)
2377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2920              		.loc 1 2377 1 is_stmt 1 view -0
 2921              		.cfi_startproc
 2922              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 121


 2923              		@ frame_needed = 0, uses_anonymous_args = 0
 2924              		@ link register save eliminated.
2378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Return CAN error code */
2379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return hcan->ErrorCode;
 2925              		.loc 1 2379 3 view .LVU938
 2926              		.loc 1 2379 14 is_stmt 0 view .LVU939
 2927 0000 406A     		ldr	r0, [r0, #36]
 2928              	.LVL225:
2380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2929              		.loc 1 2380 1 view .LVU940
 2930 0002 7047     		bx	lr
 2931              		.cfi_endproc
 2932              	.LFE355:
 2934              		.section	.text.HAL_CAN_ResetError,"ax",%progbits
 2935              		.align	1
 2936              		.global	HAL_CAN_ResetError
 2937              		.syntax unified
 2938              		.thumb
 2939              		.thumb_func
 2941              	HAL_CAN_ResetError:
 2942              	.LVL226:
 2943              	.LFB356:
2381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Reset the CAN error code.
2384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
2387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ResetError(CAN_HandleTypeDef *hcan)
2389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2944              		.loc 1 2389 1 is_stmt 1 view -0
 2945              		.cfi_startproc
 2946              		@ args = 0, pretend = 0, frame = 0
 2947              		@ frame_needed = 0, uses_anonymous_args = 0
 2948              		@ link register save eliminated.
2390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 2949              		.loc 1 2390 3 view .LVU942
2391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2950              		.loc 1 2391 3 view .LVU943
 2951              		.loc 1 2391 24 is_stmt 0 view .LVU944
 2952 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2953              	.LVL227:
2392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2954              		.loc 1 2393 3 is_stmt 1 view .LVU945
 2955              		.loc 1 2393 38 is_stmt 0 view .LVU946
 2956 0004 013B     		subs	r3, r3, #1
 2957              	.LVL228:
 2958              		.loc 1 2393 38 view .LVU947
 2959 0006 DBB2     		uxtb	r3, r3
 2960              		.loc 1 2393 6 view .LVU948
 2961 0008 012B     		cmp	r3, #1
 2962 000a 05D9     		bls	.L227
2394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
2396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Reset CAN error code */
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 122


2397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode = 0U;
2398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
2399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
2400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
2401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
2402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2963              		.loc 1 2402 5 is_stmt 1 view .LVU949
 2964              		.loc 1 2402 9 is_stmt 0 view .LVU950
 2965 000c 436A     		ldr	r3, [r0, #36]
 2966              		.loc 1 2402 21 view .LVU951
 2967 000e 43F48023 		orr	r3, r3, #262144
 2968 0012 4362     		str	r3, [r0, #36]
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     status = HAL_ERROR;
 2969              		.loc 1 2404 5 is_stmt 1 view .LVU952
 2970              	.LVL229:
 2971              		.loc 1 2404 12 is_stmt 0 view .LVU953
 2972 0014 0120     		movs	r0, #1
 2973              	.LVL230:
2405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
2406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Return the status */
2408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return status;
 2974              		.loc 1 2408 3 is_stmt 1 view .LVU954
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2975              		.loc 1 2409 1 is_stmt 0 view .LVU955
 2976 0016 7047     		bx	lr
 2977              	.LVL231:
 2978              	.L227:
2397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 2979              		.loc 1 2397 5 is_stmt 1 view .LVU956
2397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 2980              		.loc 1 2397 21 is_stmt 0 view .LVU957
 2981 0018 0023     		movs	r3, #0
 2982 001a 4362     		str	r3, [r0, #36]
2390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2983              		.loc 1 2390 21 view .LVU958
 2984 001c 1846     		mov	r0, r3
 2985              	.LVL232:
2390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2986              		.loc 1 2390 21 view .LVU959
 2987 001e 7047     		bx	lr
 2988              		.cfi_endproc
 2989              	.LFE356:
 2991              		.text
 2992              	.Letext0:
 2993              		.file 3 "c:\\users\\karol\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2994              		.file 4 "c:\\users\\karol\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2995              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l496xx.h"
 2996              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 2997              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2998              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_can.h"
 2999              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 123


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l4xx_hal_can.c
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:21     .text.HAL_CAN_MspInit:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:27     .text.HAL_CAN_MspInit:00000000 HAL_CAN_MspInit
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:42     .text.HAL_CAN_Init:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:48     .text.HAL_CAN_Init:00000000 HAL_CAN_Init
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:338    .text.HAL_CAN_MspDeInit:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:344    .text.HAL_CAN_MspDeInit:00000000 HAL_CAN_MspDeInit
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:359    .text.HAL_CAN_ConfigFilter:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:365    .text.HAL_CAN_ConfigFilter:00000000 HAL_CAN_ConfigFilter
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:590    .text.HAL_CAN_ConfigFilter:00000134 $d
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:595    .text.HAL_CAN_Start:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:601    .text.HAL_CAN_Start:00000000 HAL_CAN_Start
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:700    .text.HAL_CAN_Stop:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:706    .text.HAL_CAN_Stop:00000000 HAL_CAN_Stop
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:806    .text.HAL_CAN_DeInit:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:812    .text.HAL_CAN_DeInit:00000000 HAL_CAN_DeInit
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:866    .text.HAL_CAN_RequestSleep:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:872    .text.HAL_CAN_RequestSleep:00000000 HAL_CAN_RequestSleep
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:922    .text.HAL_CAN_WakeUp:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:928    .text.HAL_CAN_WakeUp:00000000 HAL_CAN_WakeUp
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:1025   .text.HAL_CAN_WakeUp:00000054 $d
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:1030   .text.HAL_CAN_IsSleepActive:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:1036   .text.HAL_CAN_IsSleepActive:00000000 HAL_CAN_IsSleepActive
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:1086   .text.HAL_CAN_AddTxMessage:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:1092   .text.HAL_CAN_AddTxMessage:00000000 HAL_CAN_AddTxMessage
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:1287   .text.HAL_CAN_AbortTxRequest:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:1293   .text.HAL_CAN_AbortTxRequest:00000000 HAL_CAN_AbortTxRequest
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:1369   .text.HAL_CAN_GetTxMailboxesFreeLevel:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:1375   .text.HAL_CAN_GetTxMailboxesFreeLevel:00000000 HAL_CAN_GetTxMailboxesFreeLevel
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:1446   .text.HAL_CAN_IsTxMessagePending:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:1452   .text.HAL_CAN_IsTxMessagePending:00000000 HAL_CAN_IsTxMessagePending
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:1509   .text.HAL_CAN_GetTxTimestamp:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:1515   .text.HAL_CAN_GetTxTimestamp:00000000 HAL_CAN_GetTxTimestamp
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:1611   .text.HAL_CAN_GetRxMessage:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:1617   .text.HAL_CAN_GetRxMessage:00000000 HAL_CAN_GetRxMessage
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:1905   .text.HAL_CAN_GetRxFifoFillLevel:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:1911   .text.HAL_CAN_GetRxFifoFillLevel:00000000 HAL_CAN_GetRxFifoFillLevel
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:1973   .text.HAL_CAN_ActivateNotification:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:1979   .text.HAL_CAN_ActivateNotification:00000000 HAL_CAN_ActivateNotification
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2030   .text.HAL_CAN_DeactivateNotification:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2036   .text.HAL_CAN_DeactivateNotification:00000000 HAL_CAN_DeactivateNotification
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2087   .text.HAL_CAN_TxMailbox0CompleteCallback:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2093   .text.HAL_CAN_TxMailbox0CompleteCallback:00000000 HAL_CAN_TxMailbox0CompleteCallback
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2108   .text.HAL_CAN_TxMailbox1CompleteCallback:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2114   .text.HAL_CAN_TxMailbox1CompleteCallback:00000000 HAL_CAN_TxMailbox1CompleteCallback
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2129   .text.HAL_CAN_TxMailbox2CompleteCallback:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2135   .text.HAL_CAN_TxMailbox2CompleteCallback:00000000 HAL_CAN_TxMailbox2CompleteCallback
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2150   .text.HAL_CAN_TxMailbox0AbortCallback:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2156   .text.HAL_CAN_TxMailbox0AbortCallback:00000000 HAL_CAN_TxMailbox0AbortCallback
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2171   .text.HAL_CAN_TxMailbox1AbortCallback:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2177   .text.HAL_CAN_TxMailbox1AbortCallback:00000000 HAL_CAN_TxMailbox1AbortCallback
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2192   .text.HAL_CAN_TxMailbox2AbortCallback:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2198   .text.HAL_CAN_TxMailbox2AbortCallback:00000000 HAL_CAN_TxMailbox2AbortCallback
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2213   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2219   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2234   .text.HAL_CAN_RxFifo0FullCallback:00000000 $t
ARM GAS  C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s 			page 124


C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2240   .text.HAL_CAN_RxFifo0FullCallback:00000000 HAL_CAN_RxFifo0FullCallback
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2255   .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2261   .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 HAL_CAN_RxFifo1MsgPendingCallback
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2276   .text.HAL_CAN_RxFifo1FullCallback:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2282   .text.HAL_CAN_RxFifo1FullCallback:00000000 HAL_CAN_RxFifo1FullCallback
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2297   .text.HAL_CAN_SleepCallback:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2303   .text.HAL_CAN_SleepCallback:00000000 HAL_CAN_SleepCallback
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2318   .text.HAL_CAN_WakeUpFromRxMsgCallback:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2324   .text.HAL_CAN_WakeUpFromRxMsgCallback:00000000 HAL_CAN_WakeUpFromRxMsgCallback
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2339   .text.HAL_CAN_ErrorCallback:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2345   .text.HAL_CAN_ErrorCallback:00000000 HAL_CAN_ErrorCallback
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2360   .text.HAL_CAN_IRQHandler:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2366   .text.HAL_CAN_IRQHandler:00000000 HAL_CAN_IRQHandler
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2844   .text.HAL_CAN_GetState:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2850   .text.HAL_CAN_GetState:00000000 HAL_CAN_GetState
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2911   .text.HAL_CAN_GetError:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2917   .text.HAL_CAN_GetError:00000000 HAL_CAN_GetError
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2935   .text.HAL_CAN_ResetError:00000000 $t
C:\Users\Karol\AppData\Local\Temp\ccUtMe6b.s:2941   .text.HAL_CAN_ResetError:00000000 HAL_CAN_ResetError

UNDEFINED SYMBOLS
HAL_GetTick
